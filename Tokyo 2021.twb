<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0308.0326                               -->
<workbook original-version='18.1' source-build='2024.1.1 (20241.24.0308.0326)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='athlete_tokyo_gender_counts' inline='true' name='federated.1c65rdt11b3s2d19pmpn01g9d8md' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_tokyo_gender_counts' name='textscan.1g1as4r0vh2fbv14fwi5v0j6ttc4'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='athlete_tokyo_gender_counts.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1g1as4r0vh2fbv14fwi5v0j6ttc4' name='athlete_tokyo_gender_counts.csv' table='[athlete_tokyo_gender_counts#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='sport' ordinal='0' />
            <column datatype='integer' name='man' ordinal='1' />
            <column datatype='integer' name='woman' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1g1as4r0vh2fbv14fwi5v0j6ttc4' name='athlete_tokyo_gender_counts.csv' table='[athlete_tokyo_gender_counts#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='sport' ordinal='0' />
            <column datatype='integer' name='man' ordinal='1' />
            <column datatype='integer' name='woman' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_tokyo_gender_counts.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sport]</local-name>
            <parent-name>[athlete_tokyo_gender_counts.csv]</parent-name>
            <remote-alias>sport</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts.csv_35AB408CE1BB4C15A28D60A08B5AC607]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>man</remote-name>
            <remote-type>20</remote-type>
            <local-name>[man]</local-name>
            <parent-name>[athlete_tokyo_gender_counts.csv]</parent-name>
            <remote-alias>man</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts.csv_35AB408CE1BB4C15A28D60A08B5AC607]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>woman</remote-name>
            <remote-type>20</remote-type>
            <local-name>[woman]</local-name>
            <parent-name>[athlete_tokyo_gender_counts.csv]</parent-name>
            <remote-alias>woman</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts.csv_35AB408CE1BB4C15A28D60A08B5AC607]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_tokyo_gender_counts.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_tokyo_gender_counts.csv_35AB408CE1BB4C15A28D60A08B5AC607]' role='measure' type='quantitative' />
      <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
      <column caption='Sport' datatype='string' name='[sport]' role='dimension' type='nominal' />
      <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_tokyo_gender_counts.csv' id='athlete_tokyo_gender_counts.csv_35AB408CE1BB4C15A28D60A08B5AC607'>
            <properties context=''>
              <relation connection='textscan.1g1as4r0vh2fbv14fwi5v0j6ttc4' name='athlete_tokyo_gender_counts.csv' table='[athlete_tokyo_gender_counts#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='sport' ordinal='0' />
                  <column datatype='integer' name='man' ordinal='1' />
                  <column datatype='integer' name='woman' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='athlete_tokyo_grouped' inline='true' name='federated.147xw911p16fpz1auopuq1ibrneq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_tokyo_table_sport' name='textscan.1pievrz0do3zgj1h3obuf0z3g661'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='athlete_tokyo_table_sport.csv' password='' server='' />
          </named-connection>
          <named-connection caption='athlete_tokyo_top_15' name='textscan.1oj0f560hh586g17ffkdy0gy5pu5'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='athlete_tokyo_top_15.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1pievrz0do3zgj1h3obuf0z3g661' name='athlete_tokyo_table_sport.csv' table='[athlete_tokyo_table_sport#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='sport' ordinal='1' />
            <column datatype='integer' name='BRONZE' ordinal='2' />
            <column datatype='integer' name='GOLD' ordinal='3' />
            <column datatype='integer' name='SILVER' ordinal='4' />
            <column datatype='integer' name='TOTAL' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1pievrz0do3zgj1h3obuf0z3g661' name='athlete_tokyo_table_sport.csv' table='[athlete_tokyo_table_sport#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='sport' ordinal='1' />
            <column datatype='integer' name='BRONZE' ordinal='2' />
            <column datatype='integer' name='GOLD' ordinal='3' />
            <column datatype='integer' name='SILVER' ordinal='4' />
            <column datatype='integer' name='TOTAL' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sport]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>sport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BRONZE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BRONZE]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>BRONZE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOLD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GOLD]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>GOLD</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SILVER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SILVER]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>SILVER</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL]</local-name>
            <parent-name>[athlete_tokyo_table_sport.csv]</parent-name>
            <remote-alias>TOTAL</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
      <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
      <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
      <column caption='Total' datatype='integer' name='[TOTAL]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_tokyo_table_sport.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9]' role='measure' type='quantitative' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Sport' datatype='string' name='[sport]' role='dimension' type='nominal' />
      <column-instance column='[BRONZE]' derivation='Sum' name='[sum:BRONZE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GOLD]' derivation='Sum' name='[sum:GOLD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SILVER]' derivation='Sum' name='[sum:SILVER:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOTAL]' derivation='Sum' name='[sum:TOTAL:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[sum:Age:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1c65rdt11b3s2d19pmpn01g9d8md].[sum:man:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:TOTAL:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Calculation_864972642203811840:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:man:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:SILVER:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1c65rdt11b3s2d19pmpn01g9d8md].[sum:woman:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:GOLD:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:GOLD:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:BRONZE:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:woman:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.03bk1ij1r5qcp31dxtq7v0y3czvo'>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1c65rdt11b3s2d19pmpn01g9d8md'>
        <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
        <column-instance column='[man]' derivation='Sum' name='[sum:man:qk]' pivot='key' type='quantitative' />
        <column-instance column='[woman]' derivation='Sum' name='[sum:woman:qk]' pivot='key' type='quantitative' />
        <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
        <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
        <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
        <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
        <column caption='Total Silver' datatype='integer' name='[Total Bronze (copy)_864972642204446722]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([SILVER])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[SILVER])' />
        </column>
        <column caption='Total Gold' datatype='integer' name='[Total Silver (copy)_864972642204553219]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([GOLD])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[GOLD])' />
        </column>
        <column caption='Total Bronze' datatype='integer' name='[Total Totals (copy)_864972642204307457]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM([BRONZE])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[BRONZE])' />
        </column>
        <column-instance column='[BRONZE]' derivation='Sum' name='[sum:BRONZE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[GOLD]' derivation='Sum' name='[sum:GOLD:qk]' pivot='key' type='quantitative' />
        <column-instance column='[SILVER]' derivation='Sum' name='[sum:SILVER:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Bronze (copy)_864972642204446722]' derivation='User' name='[usr:Total Bronze (copy)_864972642204446722:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Silver (copy)_864972642204553219]' derivation='User' name='[usr:Total Silver (copy)_864972642204553219:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Totals (copy)_864972642204307457]' derivation='User' name='[usr:Total Totals (copy)_864972642204307457:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1l3z5qz1ctmusm1avwq5d1p6t9rz'>
        <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
        <column-instance column='[man]' derivation='Sum' name='[sum:man:qk]' pivot='key' type='quantitative' />
        <column-instance column='[woman]' derivation='Sum' name='[sum:woman:qk]' pivot='key' type='quantitative' />
        <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_tokyo_table_sport.csv' id='athlete_tokyo_table_sport.csv_3747D2665E5D4044973B7CFCE4C194E9'>
            <properties context=''>
              <relation connection='textscan.1pievrz0do3zgj1h3obuf0z3g661' name='athlete_tokyo_table_sport.csv' table='[athlete_tokyo_table_sport#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_name' ordinal='0' />
                  <column datatype='string' name='sport' ordinal='1' />
                  <column datatype='integer' name='BRONZE' ordinal='2' />
                  <column datatype='integer' name='GOLD' ordinal='3' />
                  <column datatype='integer' name='SILVER' ordinal='4' />
                  <column datatype='integer' name='TOTAL' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='athlete_tokyo_gender_counts_country' inline='true' name='federated.1l3z5qz1ctmusm1avwq5d1p6t9rz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_tokyo_gender_counts_country' name='textscan.1d36ask0as8tad1h46e2h0x3mpnx'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='athlete_tokyo_gender_counts_country.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1d36ask0as8tad1h46e2h0x3mpnx' name='athlete_tokyo_gender_counts_country.csv' table='[athlete_tokyo_gender_counts_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='man' ordinal='1' />
            <column datatype='integer' name='woman' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1d36ask0as8tad1h46e2h0x3mpnx' name='athlete_tokyo_gender_counts_country.csv' table='[athlete_tokyo_gender_counts_country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='man' ordinal='1' />
            <column datatype='integer' name='woman' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_tokyo_gender_counts_country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[athlete_tokyo_gender_counts_country.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts_country.csv_336110A4F75A4852A71A2C625B62E998]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>man</remote-name>
            <remote-type>20</remote-type>
            <local-name>[man]</local-name>
            <parent-name>[athlete_tokyo_gender_counts_country.csv]</parent-name>
            <remote-alias>man</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts_country.csv_336110A4F75A4852A71A2C625B62E998]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>woman</remote-name>
            <remote-type>20</remote-type>
            <local-name>[woman]</local-name>
            <parent-name>[athlete_tokyo_gender_counts_country.csv]</parent-name>
            <remote-alias>woman</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_gender_counts_country.csv_336110A4F75A4852A71A2C625B62E998]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_tokyo_gender_counts_country.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_tokyo_gender_counts_country.csv_336110A4F75A4852A71A2C625B62E998]' role='measure' type='quantitative' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
      <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_tokyo_gender_counts_country.csv' id='athlete_tokyo_gender_counts_country.csv_336110A4F75A4852A71A2C625B62E998'>
            <properties context=''>
              <relation connection='textscan.1d36ask0as8tad1h46e2h0x3mpnx' name='athlete_tokyo_gender_counts_country.csv' table='[athlete_tokyo_gender_counts_country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_name' ordinal='0' />
                  <column datatype='integer' name='man' ordinal='1' />
                  <column datatype='integer' name='woman' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='team_tokyo_table_grouped' inline='true' name='federated.1gk906v0kzn50711jz48l1cbofxt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='team_tokyo_table_grouped' name='textscan.1prool10u3ea9n174ikqs036yzgh'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='team_tokyo_table_grouped.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1prool10u3ea9n174ikqs036yzgh' name='team_tokyo_table_grouped.csv' table='[team_tokyo_table_grouped#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='BRONZE' ordinal='1' />
            <column datatype='integer' name='GOLD' ordinal='2' />
            <column datatype='integer' name='SILVER' ordinal='3' />
            <column datatype='integer' name='TOTAL' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1prool10u3ea9n174ikqs036yzgh' name='team_tokyo_table_grouped.csv' table='[team_tokyo_table_grouped#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='integer' name='BRONZE' ordinal='1' />
            <column datatype='integer' name='GOLD' ordinal='2' />
            <column datatype='integer' name='SILVER' ordinal='3' />
            <column datatype='integer' name='TOTAL' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BRONZE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BRONZE]</local-name>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias>BRONZE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOLD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GOLD]</local-name>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias>GOLD</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SILVER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SILVER]</local-name>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias>SILVER</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOTAL]</local-name>
            <parent-name>[team_tokyo_table_grouped.csv]</parent-name>
            <remote-alias>TOTAL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
      <column caption='Total Totals' datatype='integer' name='[Calculation_864972642203811840]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([TOTAL])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[TOTAL])' />
      </column>
      <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
      <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
      <column caption='Total' datatype='integer' name='[TOTAL]' role='measure' type='quantitative' />
      <column caption='Total Silver' datatype='integer' name='[Total Bronze (copy)_864972642204446722]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([SILVER])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[SILVER])' />
      </column>
      <column caption='Total Gold' datatype='integer' name='[Total Silver (copy)_864972642204553219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([GOLD])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[GOLD])' />
      </column>
      <column caption='Total Bronze' datatype='integer' name='[Total Totals (copy)_864972642204307457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([BRONZE])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[BRONZE])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='team_tokyo_table_grouped.csv' datatype='table' name='[__tableau_internal_object_id__].[team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98]' role='measure' type='quantitative' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
        <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
        <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
        <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
        <column caption='Total' datatype='integer' name='[TOTAL]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='team_tokyo_table_grouped.csv' id='team_tokyo_table_grouped.csv_43F80177D1E94372940C7A86E2D5CB98'>
            <properties context=''>
              <relation connection='textscan.1prool10u3ea9n174ikqs036yzgh' name='team_tokyo_table_grouped.csv' table='[team_tokyo_table_grouped#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_name' ordinal='0' />
                  <column datatype='integer' name='BRONZE' ordinal='1' />
                  <column datatype='integer' name='GOLD' ordinal='2' />
                  <column datatype='integer' name='SILVER' ordinal='3' />
                  <column datatype='integer' name='TOTAL' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='athlete_tokyo_top_15' inline='true' name='federated.0wwtk151hblo4k188p5cn13y5vse' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_tokyo_top_15' name='textscan.1mvvmek0rbfiq611qykgu1jktcuw'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='athlete_tokyo_top_15.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1mvvmek0rbfiq611qykgu1jktcuw' name='athlete_tokyo_top_15.csv' table='[athlete_tokyo_top_15#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='sport' ordinal='1' />
            <column datatype='string' name='event' ordinal='2' />
            <column datatype='string' name='medal' ordinal='3' />
            <column datatype='integer' name='rank' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='country_code' ordinal='6' />
            <column datatype='string' name='athlete_full_name' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1mvvmek0rbfiq611qykgu1jktcuw' name='athlete_tokyo_top_15.csv' table='[athlete_tokyo_top_15#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='sport' ordinal='1' />
            <column datatype='string' name='event' ordinal='2' />
            <column datatype='string' name='medal' ordinal='3' />
            <column datatype='integer' name='rank' ordinal='4' />
            <column datatype='string' name='country_name' ordinal='5' />
            <column datatype='string' name='country_code' ordinal='6' />
            <column datatype='string' name='athlete_full_name' ordinal='7' />
            <column datatype='string' name='gender' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sport]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>sport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>medal</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_full_name]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>athlete_full_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[athlete_tokyo_top_15.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='athlete_tokyo_top_15.csv' datatype='table' name='[__tableau_internal_object_id__].[athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B]' role='measure' type='quantitative' />
      <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Medal' datatype='string' name='[medal]' role='dimension' type='nominal' />
      <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
      <column caption='Sport' datatype='string' name='[sport]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='athlete_tokyo_top_15.csv' id='athlete_tokyo_top_15.csv_79F6AFAA7772412D961319EC6690A60B'>
            <properties context=''>
              <relation connection='textscan.1mvvmek0rbfiq611qykgu1jktcuw' name='athlete_tokyo_top_15.csv' table='[athlete_tokyo_top_15#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='sport' ordinal='1' />
                  <column datatype='string' name='event' ordinal='2' />
                  <column datatype='string' name='medal' ordinal='3' />
                  <column datatype='integer' name='rank' ordinal='4' />
                  <column datatype='string' name='country_name' ordinal='5' />
                  <column datatype='string' name='country_code' ordinal='6' />
                  <column datatype='string' name='athlete_full_name' ordinal='7' />
                  <column datatype='string' name='gender' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sport_per_age2020' inline='true' name='federated.03bk1ij1r5qcp31dxtq7v0y3czvo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sport_per_age2020' name='textscan.0sxxuqa1wo0wk115n3juj0bdgq65'>
            <connection class='textscan' directory='C:/Users/slava_working/PythonProjects/hackathon_olympics/tokyo_datasets' filename='sport_per_age2020.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0sxxuqa1wo0wk115n3juj0bdgq65' name='sport_per_age2020.csv' table='[sport_per_age2020#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='integer' name='Age' ordinal='3' />
            <column datatype='string' name='Team' ordinal='4' />
            <column datatype='string' name='NOC' ordinal='5' />
            <column datatype='string' name='Games' ordinal='6' />
            <column datatype='integer' name='Year' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='Sport' ordinal='10' />
            <column datatype='string' name='Event' ordinal='11' />
            <column datatype='string' name='Medal' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0sxxuqa1wo0wk115n3juj0bdgq65' name='sport_per_age2020.csv' table='[sport_per_age2020#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Name' ordinal='1' />
            <column datatype='string' name='Sex' ordinal='2' />
            <column datatype='integer' name='Age' ordinal='3' />
            <column datatype='string' name='Team' ordinal='4' />
            <column datatype='string' name='NOC' ordinal='5' />
            <column datatype='string' name='Games' ordinal='6' />
            <column datatype='integer' name='Year' ordinal='7' />
            <column datatype='string' name='Season' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='Sport' ordinal='10' />
            <column datatype='string' name='Event' ordinal='11' />
            <column datatype='string' name='Medal' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[sport_per_age2020.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sport_per_age2020.csv' datatype='table' name='[__tableau_internal_object_id__].[sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sport_per_age2020.csv' id='sport_per_age2020.csv_E1E3B3EE532B4A46B824849C498F5F3D'>
            <properties context=''>
              <relation connection='textscan.0sxxuqa1wo0wk115n3juj0bdgq65' name='sport_per_age2020.csv' table='[sport_per_age2020#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Sex' ordinal='2' />
                  <column datatype='integer' name='Age' ordinal='3' />
                  <column datatype='string' name='Team' ordinal='4' />
                  <column datatype='string' name='NOC' ordinal='5' />
                  <column datatype='string' name='Games' ordinal='6' />
                  <column datatype='integer' name='Year' ordinal='7' />
                  <column datatype='string' name='Season' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='Sport' ordinal='10' />
                  <column datatype='string' name='Event' ordinal='11' />
                  <column datatype='string' name='Medal' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Age Bottom'>
      <layout-options export-no-caption='true' export-orientation='landscape' export-smart-breaks='false'>
        <title>
          <formatted-text>
            <run>Age per Sport Top 10&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sport_per_age2020' name='federated.03bk1ij1r5qcp31dxtq7v0y3czvo' />
          </datasources>
          <datasource-dependencies datasource='federated.03bk1ij1r5qcp31dxtq7v0y3czvo'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Median' name='[med:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MEDIAN([Age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]' direction='DESC' using='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[med:Age:qk]' />
          <slices>
            <column>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</rows>
        <cols>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[med:Age:qk]</cols>
      </table>
      <simple-id uuid='{5094D4B1-E226-493E-AF27-B3182B22FD4F}' />
    </worksheet>
    <worksheet name='Age Top'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age Per Sport Bottom 10&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sport_per_age2020' name='federated.03bk1ij1r5qcp31dxtq7v0y3czvo' />
          </datasources>
          <datasource-dependencies datasource='federated.03bk1ij1r5qcp31dxtq7v0y3czvo'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Median' name='[med:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MEDIAN([Age])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[med:Age:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</rows>
        <cols>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[med:Age:qk]</cols>
      </table>
      <simple-id uuid='{5E894B2D-3B6F-42C2-BBA1-0F80B4FAFB79}' />
    </worksheet>
    <worksheet name='Bronze Heat Map I'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; Individual Athlete</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
            <column caption='Total Bronze' datatype='integer' name='[Total Totals (copy)_864972642204307457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([BRONZE])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[BRONZE])' />
            </column>
            <column-instance column='[Total Totals (copy)_864972642204307457]' derivation='User' name='[usr:Total Totals (copy)_864972642204307457:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action3_C6FCB98F8A5D462E83EE24922A8F26CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' included-values='non-null' />
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8e2df</color>
                <color>#e0d4ce</color>
                <color>#d8c6be</color>
                <color>#d0b9ae</color>
                <color>#c8ac9f</color>
                <color>#bfa091</color>
                <color>#b79483</color>
                <color>#af8976</color>
                <color>#a77e6a</color>
                <color>#9f745f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C6482466-081A-436F-BDC5-B373D026A445}' />
    </worksheet>
    <worksheet name='Bronze Heat Map T'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; Teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
            <column-instance column='[BRONZE]' derivation='Sum' name='[sum:BRONZE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action3_C6FCB98F8A5D462E83EE24922A8F26CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]' included-values='non-null' />
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8e2df</color>
                <color>#e0d4ce</color>
                <color>#d8c6be</color>
                <color>#d0b9ae</color>
                <color>#c8ac9f</color>
                <color>#bfa091</color>
                <color>#b79483</color>
                <color>#af8976</color>
                <color>#a77e6a</color>
                <color>#9f745f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:BRONZE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{47F0A4CD-F204-4A63-8679-F815E17D8AB7}' />
    </worksheet>
    <worksheet name='Gender Per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gender/Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='athlete_tokyo_gender_counts_country' name='federated.1l3z5qz1ctmusm1avwq5d1p6t9rz' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[BRONZE]' derivation='Sum' name='[sum:BRONZE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l3z5qz1ctmusm1avwq5d1p6t9rz'>
            <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
            <column-instance column='[man]' derivation='Sum' name='[sum:man:qk]' pivot='key' type='quantitative' />
            <column-instance column='[woman]' derivation='Sum' name='[sum:woman:qk]' pivot='key' type='quantitative' />
            <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:man:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:woman:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:man:qk]&quot;</bucket>
              <bucket>&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:woman:qk]&quot;</bucket>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:BRONZE:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([country_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;ROC&quot;</bucket>
              <bucket>&quot;People&apos;s Republic of China&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Great Britain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Chinese Taipei&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Islamic Republic of Iran&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Hong Kong, China&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Refugee Olympic Team&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Virgin Islands, British&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]</column>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' value='41' />
            <format attr='title' class='0' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]</rows>
        <cols>[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{67F218FD-3A98-4CD9-8FC9-27381C894628}' />
    </worksheet>
    <worksheet name='Gender Per Sport'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gender/Sport</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='athlete_tokyo_gender_counts' name='federated.1c65rdt11b3s2d19pmpn01g9d8md' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[sport]' derivation='None' name='[none:sport:nk]' pivot='key' type='nominal' />
            <column caption='Sport' datatype='string' name='[sport]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1c65rdt11b3s2d19pmpn01g9d8md'>
            <column caption='Man' datatype='integer' name='[man]' role='measure' type='quantitative' />
            <column-instance column='[man]' derivation='Sum' name='[sum:man:qk]' pivot='key' type='quantitative' />
            <column-instance column='[woman]' derivation='Sum' name='[sum:woman:qk]' pivot='key' type='quantitative' />
            <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l3z5qz1ctmusm1avwq5d1p6t9rz'>
            <column-instance column='[woman]' derivation='Sum' name='[sum:woman:qk]' pivot='key' type='quantitative' />
            <column caption='Woman' datatype='integer' name='[woman]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c65rdt11b3s2d19pmpn01g9d8md].[sum:man:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c65rdt11b3s2d19pmpn01g9d8md].[sum:woman:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1c65rdt11b3s2d19pmpn01g9d8md].[sum:man:qk]&quot;</bucket>
              <bucket>&quot;[federated.1l3z5qz1ctmusm1avwq5d1p6t9rz].[sum:woman:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='member' level='[country_name]' member='&quot;United States of America&quot;' user:ui-action-filter='[Action5_39324416CE8940E9B233A2D4EC1CC878]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:sport:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sport:nk]' />
              <groupfilter function='member' level='[none:sport:nk]' member='&quot;Equestrian&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:sport:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Athletics&quot;</bucket>
              <bucket>&quot;Shooting&quot;</bucket>
              <bucket>&quot;Judo&quot;</bucket>
              <bucket>&quot;Wrestling&quot;</bucket>
              <bucket>&quot;Boxing&quot;</bucket>
              <bucket>&quot;Cycling Road&quot;</bucket>
              <bucket>&quot;Equestrian&quot;</bucket>
              <bucket>&quot;Swimming&quot;</bucket>
              <bucket>&quot;Fencing&quot;</bucket>
              <bucket>&quot;Canoe Sprint&quot;</bucket>
              <bucket>&quot;Weightlifting&quot;</bucket>
              <bucket>&quot;Cycling Track&quot;</bucket>
              <bucket>&quot;Sailing&quot;</bucket>
              <bucket>&quot;Table Tennis&quot;</bucket>
              <bucket>&quot;Taekwondo&quot;</bucket>
              <bucket>&quot;Tennis&quot;</bucket>
              <bucket>&quot;Artistic Gymnastics&quot;</bucket>
              <bucket>&quot;Archery&quot;</bucket>
              <bucket>&quot;Golf&quot;</bucket>
              <bucket>&quot;Diving&quot;</bucket>
              <bucket>&quot;Triathlon&quot;</bucket>
              <bucket>&quot;Canoe Slalom&quot;</bucket>
              <bucket>&quot;Badminton&quot;</bucket>
              <bucket>&quot;Karate&quot;</bucket>
              <bucket>&quot;Skateboarding&quot;</bucket>
              <bucket>&quot;Cycling Mountain Bike&quot;</bucket>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
              <bucket>&quot;Rowing&quot;</bucket>
              <bucket>&quot;Marathon Swimming&quot;</bucket>
              <bucket>&quot;Cycling BMX Racing&quot;</bucket>
              <bucket>&quot;Sport Climbing&quot;</bucket>
              <bucket>&quot;Surfing&quot;</bucket>
              <bucket>&quot;Cycling BMX Freestyle&quot;</bucket>
              <bucket>&quot;Trampoline Gymnastics&quot;</bucket>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]</column>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[none:sport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.147xw911p16fpz1auopuq1ibrneq].[none:sport:nk]' value='21' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147xw911p16fpz1auopuq1ibrneq].[none:sport:nk]</rows>
        <cols>[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{7CC7BEA7-0040-4237-9177-CE0F216ECE8D}' />
    </worksheet>
    <worksheet name='Geo Map Medals'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='athlete_tokyo_top_15' name='federated.0wwtk151hblo4k188p5cn13y5vse' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wwtk151hblo4k188p5cn13y5vse'>
            <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_code]' derivation='None' name='[none:country_code:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Total' datatype='integer' name='[TOTAL]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOTAL]' derivation='Sum' name='[sum:TOTAL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action3_C6FCB98F8A5D462E83EE24922A8F26CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Longitude (generated)]' field-type='quantitative' max='26504595.285895158' min='-18618875.281707332' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Latitude (generated)]' field-type='quantitative' max='10395038.519978531' min='-6768289.1375620877' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.147xw911p16fpz1auopuq1ibrneq].[sum:TOTAL:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147xw911p16fpz1auopuq1ibrneq].[sum:TOTAL:qk]' />
              <text column='[federated.0wwtk151hblo4k188p5cn13y5vse].[none:country_code:nk]' />
              <lod column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <geometry column='[federated.147xw911p16fpz1auopuq1ibrneq].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147xw911p16fpz1auopuq1ibrneq].[Latitude (generated)]</rows>
        <cols>[federated.147xw911p16fpz1auopuq1ibrneq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{153C58D3-9AE0-409B-A288-8041A9EB3B09}' />
    </worksheet>
    <worksheet name='Gold Heat Map I'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
            <column caption='Total Gold' datatype='integer' name='[Total Silver (copy)_864972642204553219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([GOLD])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[GOLD])' />
            </column>
            <column-instance column='[Total Silver (copy)_864972642204553219]' derivation='User' name='[usr:Total Silver (copy)_864972642204553219:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action3_C6FCB98F8A5D462E83EE24922A8F26CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' included-values='non-null' />
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='22' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9e9d2</color>
                <color>#e2e2b5</color>
                <color>#dbdb99</color>
                <color>#d4d47f</color>
                <color>#cdcd66</color>
                <color>#c6c64f</color>
                <color>#bfbf39</color>
                <color>#b8b824</color>
                <color>#b1b111</color>
                <color>#aaaa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{98844092-B667-4190-9C5E-466457418BB7}' />
    </worksheet>
    <worksheet name='Gold Heat Map T'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; Teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
            <column-instance column='[GOLD]' derivation='Sum' name='[sum:GOLD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action3_C6FCB98F8A5D462E83EE24922A8F26CD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='22' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:GOLD:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9e9d2</color>
                <color>#e2e2b5</color>
                <color>#dbdb99</color>
                <color>#d4d47f</color>
                <color>#cdcd66</color>
                <color>#c6c64f</color>
                <color>#bfbf39</color>
                <color>#b8b824</color>
                <color>#b1b111</color>
                <color>#aaaa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:GOLD:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:GOLD:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:GOLD:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{793DC69E-3863-428A-A55D-A7A0AB3542FE}' />
    </worksheet>
    <worksheet name='Medals Per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medals/Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Bronze' datatype='integer' name='[BRONZE]' role='measure' type='quantitative' />
            <column caption='Gold' datatype='integer' name='[GOLD]' role='measure' type='quantitative' />
            <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[BRONZE]' derivation='Sum' name='[sum:BRONZE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOLD]' derivation='Sum' name='[sum:GOLD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SILVER]' derivation='Sum' name='[sum:SILVER:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:BRONZE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:SILVER:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:GOLD:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:BRONZE:qk]&quot;</bucket>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:SILVER:qk]&quot;</bucket>
              <bucket>&quot;[federated.147xw911p16fpz1auopuq1ibrneq].[sum:GOLD:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]'>
            <groupfilter count='40' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([country_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;People&apos;s Republic of China&quot;</bucket>
              <bucket>&quot;ROC&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Great Britain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Chinese Taipei&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Islamic Republic of Iran&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Hong Kong, China&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Refugee Olympic Team&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Virgin Islands, British&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]</column>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' value='216' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]</rows>
        <cols>[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D2180E6B-D5B1-4D1B-85C2-FB109F7AB106}' />
    </worksheet>
    <worksheet name='Silver Hear Map I'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
            <column caption='Total Silver' datatype='integer' name='[Total Bronze (copy)_864972642204446722]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SILVER])+SUM([federated.147xw911p16fpz1auopuq1ibrneq].[SILVER])' />
            </column>
            <column-instance column='[Total Bronze (copy)_864972642204446722]' derivation='User' name='[usr:Total Bronze (copy)_864972642204446722:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action4_F96BB30B8CDA40DB827E53D9C0C459D7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]' included-values='non-null' />
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e7eaeb</color>
                <color>#dde3e5</color>
                <color>#d4dcdf</color>
                <color>#cbd6da</color>
                <color>#c2cfd4</color>
                <color>#b9c9ce</color>
                <color>#b1c2c9</color>
                <color>#a9bcc3</color>
                <color>#a0b6bd</color>
                <color>#99b0b8</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4E59FC15-335B-4C7A-B8EB-6044285E1000}' />
    </worksheet>
    <worksheet name='Silver Hear Map T'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; Teams&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_tokyo_grouped' name='federated.147xw911p16fpz1auopuq1ibrneq' />
            <datasource caption='team_tokyo_table_grouped' name='federated.1gk906v0kzn50711jz48l1cbofxt' />
          </datasources>
          <datasource-dependencies datasource='federated.147xw911p16fpz1auopuq1ibrneq'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1gk906v0kzn50711jz48l1cbofxt'>
            <column caption='Silver' datatype='integer' name='[SILVER]' role='measure' type='quantitative' />
            <column-instance column='[SILVER]' derivation='Sum' name='[sum:SILVER:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[country_name]' user:ui-action-filter='[Action4_F96BB30B8CDA40DB827E53D9C0C459D7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]' included-values='non-null' />
          <slices>
            <column>[federated.147xw911p16fpz1auopuq1ibrneq].[Action (Country Name)]</column>
            <column>[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e7eaeb</color>
                <color>#dde3e5</color>
                <color>#d4dcdf</color>
                <color>#cbd6da</color>
                <color>#c2cfd4</color>
                <color>#b9c9ce</color>
                <color>#b1c2c9</color>
                <color>#a9bcc3</color>
                <color>#a0b6bd</color>
                <color>#99b0b8</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]' />
              <color column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]' />
              <text column='[federated.147xw911p16fpz1auopuq1ibrneq].[none:country_name:nk]' />
              <text column='[federated.1gk906v0kzn50711jz48l1cbofxt].[sum:SILVER:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{66EAB4A5-0111-4839-8C7C-02342244F37D}' />
    </worksheet>
  </worksheets>
  <windows source-height='135'>
    <window class='worksheet' name='Geo Map Medals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwtk151hblo4k188p5cn13y5vse].[none:country_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4E71F1B-53A3-4095-B340-CA723C22082B}' />
    </window>
    <window class='worksheet' name='Gold Heat Map I'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Silver (copy)_864972642204553219:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49B0A63D-1053-434B-9CE1-D98F9213ACB9}' />
    </window>
    <window class='worksheet' name='Gold Heat Map T'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E4359FE1-014F-49D7-ADD4-416A9C5F3F9C}' />
    </window>
    <window class='worksheet' name='Silver Hear Map I'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Bronze (copy)_864972642204446722:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13A793E4-77FE-4D23-B376-61DC149C974B}' />
    </window>
    <window class='worksheet' name='Silver Hear Map T'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{273024FA-D2D9-4A34-BF03-0C109782D4A0}' />
    </window>
    <window class='worksheet' name='Bronze Heat Map I'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gk906v0kzn50711jz48l1cbofxt].[usr:Total Totals (copy)_864972642204307457:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1FBC923-9598-4ECE-AC97-659B1846606F}' />
    </window>
    <window class='worksheet' maximized='true' name='Bronze Heat Map T'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E9AB7C50-114B-4158-82EC-559C6B78DA1B}' />
    </window>
    <window class='worksheet' name='Medals Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{356B2447-B2D4-4698-BC72-2A1320A08E89}' />
    </window>
    <window class='worksheet' name='Gender Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.147xw911p16fpz1auopuq1ibrneq].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{42561D5D-C5B9-450F-89B6-5F9608E4CFDD}' />
    </window>
    <window class='worksheet' name='Gender Per Sport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{14EA0AE0-2154-403F-BFED-5251CE89B125}' />
    </window>
    <window class='worksheet' name='Age Top'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</field>
            <field>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78426E4F-B58C-4CBB-BB39-7C53BEDF6176}' />
    </window>
    <window class='worksheet' name='Age Bottom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Sport:nk]</field>
            <field>[federated.03bk1ij1r5qcp31dxtq7v0y3czvo].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2E5C7BF-AA4D-46E8-AD40-DF9E483A8C9A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Bottom' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Age Top' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z3ccZ5bn+YvISO8TCSATQMIQngTovSTKqySVn6o5NT2mpme65+zut+iv
      sG/qbJ+u2p6une6a6q4u02UlijL0JAjCEN57IJHe24jYFyApUo4iCQKpQvzO4QsiI564kZH/
      uI+59z6CqqoqGhp7FHG3DdDQ2E00AWjsaTQBaOxpNAFo7Gk0AWjsaTQBaOxpNAFo7Gk0AWjs
      aTQBaOxpNAFo7Gk0AWjsaTQBaOxpNAFo7Gk0AWjsaTQBaOxpNAFo7Gk0AWjsaTQBaOxpNAFU
      IIqiUC6Xd9uM+5TLZWRZ3m0zHqJQKGxLO5oAKpRKStVWFKWi7IEtm7YDaVta0dh2Lt9Z4ubE
      xm6bAYCqKCAICIKw26bcR5FlRJ3uqdvRBFChLAcTXB1Z3m0z/uzZli5QMRfig9+/w0Ikc/9v
      GxOX+LeP7lAsP72rkuUQk5ORJ29AVUgsj/LbX/yMn/3idwwtPEVbGn9WbIsAZLlEYTPI9Ebo
      7l9KrIwMsRDP8mS//zwjIyOEw1kAVDXJ2lrqie0rJTe5NbHMgee/xhsv9JBPJB5xRpRbf+wj
      +sRXhGJsmYv9o5Tkyuo7azzMNnWBBKoaq1lZiVI40IwxM8eGvA+/VwDKhOYmuHVnloLk4vCZ
      UzTbCkyvlTBnppnI1XKqRWLg5jCRokRL73GahAUuXerHbh+jvuMgRw9KpIMzfPinO6T1Xo6f
      OEa1scDU4E0m13PUdR7mcIef+OYioYVVZoNhTPW9vHKsFUkUUAG5kCVdUGgMNHOqViUbXmdT
      NdFcbWZhoJ+c/zjdPonViVkcnT7sddVYgOD4AFORENFwnobObkqrU8R0Xo6fPIE5O8vI2Crh
      eApPYB/G/DrLMYlDp4/TYDBS6/UgCkUWZxdJrC8zH05R3XmaM90+CpF5rlwbJCGbae4+SG9H
      HfrteRgaj8H2zQJZ6ukybzKTKLM5Po/3YAcmAFSQzNQ1NtPozNE/tgalJFPD15jYNNO1z4+g
      k/DUBGj225mfnUF2BOju7ubYsZMc7GjAJKrkskX8nUcIOEqsLIdYn73FfNbLsWP7ycyPMrsZ
      I7I2z0razLETPZRXlknenSnQ272cONbD6s0/8A//9GvuLMcxCCnGpoPI6QiruTSL40uU80uM
      LBcxkGZ+YpUiEF0Yp1TVwYkj9UzeHMfZdgifI8vqSpxMdIVQ0UXvwQ5iC3coOdvo8RlZ2ggj
      ZyLMr4aQ1SJrMzOkTPWcONZOdGqeTHGDKxfHqe45xenjVSwOb1A5k557i20cBEs0dNdw484E
      oZyLo216PgoCpQLB9SUW1lMohShLuOFIHZgCvPDiUYwibEwOMrscQinnWEhbeP7kAVwuF15v
      NVUuK+WySHXLfjpbGghJWYIZmXQ4TF33iwR8AvrIOjPpNFWWKg7U7qO+Xk/IFeZe50MQJdz+
      Dt78fhvZ8DTv35yi/e0DeOK3mAvpsFV34FibYXbcjLntIEYh/fFdSdW0dTfjUxy0NIg0NzcQ
      1UdJJGREi5mGljaa6hSSiTjVTc04YgU2s594rzjqONS1D5utwMrEGEo8hLzvMAeb61DVPHo5
      vn2PQeOx2NZ1AMnZjnHlBhFnFba7U2ZqMUusoKf31HMcP9CMRb91SYPdjvHu1bPJODVdZzh7
      4gBe61ZHQJdNshqJkkrn+KxutMXlZmN6klBonen1FC6L5XPtKqTjTIwOE4wkyGVz5BQQBCsd
      /jR9c1Hslmpcfj3DEwXavIbt/Eo+G6uD0tIUS6EoodUg2Wd/RY3PQfc3f/M3f/PUragKiiLh
      8rgQUPH4AnhtegqqRK2vFmsxTN/NQbIGD77aOpp8NoqKgWq3FQBJLzLbf4XFpB5/IECgtha3
      pczoQD9rWQN+vxtkE16vBUUpo9Ob8dUHKKwNc2N4DmfrYXpbakCRMZsdmM0SpaKMzevGIAgI
      KCTXp7nZN8h8TMeJs8fwWgwYXRYSK1kau5qxiTIpRU9box9Jp1LIi1TXeRCKRUzV1ZhVhVJJ
      wOV1IiglJMmO1SIgGl04LSJlWcXmcGMQZBS9GZdFT1k0Ue22I5dVXC4HkiRQKqo4fXW41U2u
      Xu1nJR6jjJ/93bX33bGqqgzPbjC+pM1WPWsErTr0LlCMcu3CewzORxBNdk6+9h0ON9q4t8yk
      KAr/651B/vXS1K6auRfQBFCBKIrCxcEF+qYqaCUYAUGsnJVgWZbRbcNKsCaACkRRFGRZRq+v
      jInRYrGIKIpIUuUEDuRyOcxm81O3owXDaexpNAFo7Gkqx6dpPMSvLk3wh+uzu20GACoqIFA5
      I4Atm7bDIk0AFUq+UCKWzu+2GX/2/FkKIL0xzfnz51mO5inLEjZvLS+88W26faZHnrs6dBW5
      /SyNn7+u9hRkuHN1lpazB7E9i+Y1Hps/SwHYfO1897+0szJzk9W4j+PHG/myE2alXAZ5e5KN
      PgOFXCbHM2te47H5sxTAZ5Pm9p/eoW9+E2NVK2998zVq9Fn63vsDQ4tx6g++xEsn2gFQlRKh
      hUmWsi6a9MusO07QU53j/d+dp+nUmzTok8yEM7T4HQxdusDIcpq6A2d48WQHsZURFkcWmFzf
      QF9/jB+8eQwlOs+F9y6ykiqg6FvpUhVii0P86cINkoKbF976Bl0+KxU0zb5n2EMCkHDXN9Nj
      qyYTnuPWRJTnpOsMJJx0ddcSXLjGmK8OezbM4MXzeKraOHe6ASWWJDS+SEEXJyk2kIqFiBoi
      FEu1hGf6yNS+wF++5mbsymUmV93YUymo6eUv336VG+cHSebDTA3N0/nqD/i6t8T19yYgu8Kl
      2xFe/ou/pkrd5MI7H+B+6xv4n35aW+Mx2TPToGpsidH1LFanG5fHQTGTIx5KUN3gx+P20H34
      LC1ePaKoxyTIlPQGJFT0lgbs5SUm78TpOFJLIp0lHQljqa6hnM3g8fvQ6834PDbyxQKYHDTV
      VSNJBmwWA0KhgODx4XdZEEQdkihALkXO46fWrEOy+KhxZslo491dYe8IQJFBhVIhTy6TRwH8
      He2klpZI5wtksxnyhTJ6k5OeF9+iozTO1dE1FJ0RiylGf8RJd301zvQSUyEb9dV63A0trPRd
      4MbNa/QtpvF73J++sNmOMbHC9RvXGOgfYD6SA3cDLdk5Llzr4+bVC6zJHficO/6VaLBd0aAV
      iqQ3YXc4sFoMiGYXNjVNqiDia2mnqdaL2xeg2lAgky9jclThq6nCarNitTqp9vkwKGUsDgc2
      sw1vbS1VTjsOs4Chthm/w4TJ5sFhKJEpQEPHfppqXZiMRqxWKwaDhNFswep046t2UshkUAxO
      WvYF8Hq8+Hxu8skEst7DoWMHcBo+fhdp0aA7hxYLVIFo0aA7xx4aBH+1ONZZR5XLvttmACDL
      ZQRBRBQrp8dcKhXR658+eUnzABWIFg36aLRoUA2NbaByJK3xEKlsgUK5MuZGS6UyoihsSwLK
      dpHPFzCZnr6WhiaACuV3V6e0QfAOoAngHqpMIV+gdDcQSDJaMOkft4eo3i0jLqLTffG5crGA
      KhnRUaZYFjAaKuftupfQxgD3SG3wzm//mX/+xS/55S9/ye3F5Jc+Nb66ylZVVJW1mUlmVsOP
      PGf2w18zlgISQ/z64tKTWq3xlGge4AG8HSd59cB+7pYm2qqJr95NBxEEBAG2/rQ1cbZVLlxl
      fXQUu9+PWVABFVVVturXCx+nbDx4TiWVGd/raAJ4gEx4heHBPEadHn9bK4boNBcv3yKYVXHV
      9/LNNw4SHL7KR/0zFEQjXcfP4S/O8O716yhzcwR6X+GUO834lT4uJovo3S18/VuvYgwO8ocP
      +0kUBXxd5/jGuc7dvlWNu2gCeABVLlMsFBEkFbmYZXY5ROeL3+fbfj2T7/+W4Tkv0aiZ7/7w
      r7CpcS69cx37W9/gawkB++uvU4/C8sQd9h1/nW+31rBx80+Mh2ROWRw47Dby8QQLt0eJagKo
      GDQBPICttplD97pAxRSrCFuDWUGHQQ+lsgI6HTpBQBD06AUFWQVVLVIqKqh6FQQdRqMeARVF
      UBHUNMMjK7SeeIMXHTmu/maQ0m7fqMZ9NAF8HnoLzT4n16/8ngEFBFMDbz1Xx2pygT/88l9Q
      BJXqfaepNUHZmuXCz/+Fpt5T7DelGbsyyJAogbmO146YSYTh1tULTDis5HJaHehKQguFuIdS
      plBW0ev19zOzVKVMNp2mUAaDxYrNJKGUCyRTWRQkrHYbRklELmZJpvPoTFasepVMJkdZAYPF
      htUooZYLJNNZkAzoBRGjzYKay6AarejVItmiiNX88btIC4bbOTQPcA9RwviJ2CpBlLA6XFgf
      OsyEy/1wcr3OYMHt+TiL3uF6+HNB/+lzMN9r1YBVywTbNTQPUIEoikI4niZTqIy9ecvlrWjQ
      Ry3u7SSFQgGj0fjU7WgCqEC0aNBHo0WDamhsA5UjaY2HmFuLsRJOP/rAHUCWZQRBqKiEmGKx
      hMHw9B5SE0CFcmNsRZsF2gE0AXxJ0sE5ZtaTIEpUN7Tgd2uFrP4cqByfVuEEh26zlM2SSYbp
      v/g+E+tp1EKK20PDxDLFTx1fSqxxfXhS2yi7wtE8wJdEEJz0nj1Ls6qQWJ6kf2GKlqoDNNTX
      YZIgEY9htrswiCWi0TwOq53megs6USYZT5JPp0jkilg8ddRVWZFzCVbXNikoEs6qarwe25eu
      X6qxfWge4DERBBGny0FZLlPKxBkdHyeRzjA5fodwskQ5scqt8WUK8RUGJ5coKzlGb1ylf3CC
      xbkRLl4aI68kGb50ieGZBRYXBrl4cZpP+xCNnUDzAE+ALMuID8T1iwYL9VYjK9EQaiFBTV0t
      Oh7Y/Npay8kDPXicRa6/N04pukLItZ83j7cgMcfv/yWxS3eioXmAx0SV80yMjiOZ3Zj090bB
      Iv7mGuILm2xmUnirvA+fpNNj1OsQRBGdIKBKEqVkgoKsUsxktbf/LqJ5gC+JaIzw6x/9CKPO
      SHPvGU7vb0YiidFoRBQERFsDAfE2U4X9dNv1CEU9JiMIiFvh0YIAiBhMBnSOAB2W9/mnn9zA
      6DVjFA/u9u3tWbRQiN2gFGfk9ggb6SKCnERXc4Zzh2vvu2MtGnTn0DzAbqCz4A8E0CdzCPp2
      Ak01n+qL6iUdZmOFPJ6tPfIqi22ySfMAFYgWDPdotGA4DY1tQBOAxp6mcnyaxkPcGFthYCa0
      22YAoCjy3XpGlfO+lOUyOt3T/3w1AVQoc2sx3uuf220z/ux5IgEUkhsM3OxjPSvR2nuC/c1e
      pEeMyCPzg2SrDhNwPMkVIRtZ4saNm0SyoDN7OP7ccwRcKuNXr5KrPcihVi86QE7Oc/7GKodP
      nUKITFByddLgNlBOLDEesdKzrwoBhdjKBDdujZEuA+YGvvbmSezPPOWvwMLgPO7DXWhbglUG
      j//ElQz9Fy8i1/Zy+tgBbLoS5S+RuppYmySYgXx6kZsXJ8g95mUL8TzGuhZeOPcCJzot3Lo6
      QYESmytJgmtTpIsqILMxMshyLEI4XUYSYWZyimw+xejoEibLvVkVlVSyQHVrD+fOnePc6W7M
      2xDbrJQKTA/1ESl83hFF1ifnqYw0Fw14Ag+gRsYJuc7wjd7A3ehFlfjSFAlvO7VmlVg4SFnn
      wCrEGB4YJSE66Tl05P75ot5KdZ0FSZZZmhggmEwTTou09x5mX42F6PIkQxPLqJKV5oNHaau+
      Vz1Bh8XhptrrJVMOYrHqEQCT3YEqqSSSOZyONKMhNz2BLABV9fvwLt+kfygJhmo6q+0fTx2L
      eux2DzU1NVv/LyRZjhUQEous5F30tvtYGbvNQqRIQ/cxugIuUmuTDI3Ng6ORg4e6sKkpxgdu
      sZoUCHR2Y45Ocbl/DOtiiNauXlwGiaaAD0kHofkZ9A2++9+DnI8x3HeLjaxI5/HnaakyVtxU
      +17gsT1ANryJ0et5KHRXVeOMj65QlsuszU+SUmDk+jWUqmbamnwYdcr9Y0uFELNTm5QVmdmR
      QQo2P41OHUvLKyTCK9weXcTX0oFHibMceTBILMXgu7/k//nbH/Ob6+vs62xADyBZaLAb2Egm
      SW9somuo4/7OWpKFzgM+1sZWqW5uxqh74CeW3+TDX/8TP/rRj/jRL69QyiWYGbpI34KC319N
      ZmmQuYyFmmonK1MDrEUj3Bmaw1zlQ8oGGZ9aIrI5zXLcSKCxHrvRgKuuhab6Otq79xOosZGd
      HWU2XUTNr3BnLsPHFdBllgdvETd58Vc7mL15jbAWELQrPLYHMHu8FOcSyFjvikDAUduNdeU2
      6+ES4YyHk1VRJtPNnDvUeb+mzqeLjQu4a9to7u3EtGkhs5khVU5SW3+M/R21bGZXyYgPrtHZ
      OfzGv+NgSzP52AJXb4zie+sAIFLTVMXMrSDLVSUCNbUUV7bOUMs55ic3qGqvITi3QIu742MR
      mGp46Tv/kY7AXQ+QXEW2BHjpxDHcJh1D14aYi3uIGwCbD1IzDIws4U0kEJCor2rF6qzDXL7G
      3HwGX7OJ6n0+ar1VVAeaqTGB91gd5wfmsbhC2DoPY7n/uokzObLIujXMBmCpakAtAU+/55vG
      Y/LYAhC9ndivvsPQ/Kt0VokksiWqvB68FgPjN6/hPPI9TIKKzdDH8kYXDTZA9+XqtxgVPeHw
      AvGUlXgiSemh01TkcplisQiKSj6Tu19jU7DVU5//E5MxN6eanNzbXTcRXCKIlzNHA4xd62cx
      Vk+71/a5XQ2L3Ybh7jZA7ho/Ad8RXjnoI5tKYNKnafD7OfbGa1RLeRIlHTqhRPeplxCyIUbm
      Fkg11JLNJkimsjh1BoyuNvyFX/DhcgtvtRuBe4MDK9U1Nizdr3E8YCUdj2DUsmF2hcffKFs0
      4fc7mLp+gWsjCxi9jdRV2bGLcW4smXnl1D706PF4dAx+8B63Z0O4/c3YdXkkVwNOQ5Fi0Ui1
      z0E5n8deXY1eLlMSJGq8XvLBcT68OsDaZgZHSystVVsdGqUU4871i1y7dYfxxSS9L71Ao02i
      kJNx1lbjshSJFWvpaHYj57MYnTXkQ4t49h3Ca7dQ61KZDSrU3x0HlItFJLMNu+WuypQyOUWH
      x+FAEsHq9REf+4iLN4aIlK00NnXit8W48uFF7iyEcdQGcElp+j96n4HZEIHeU+zz2RBzIa5+
      dJmkpYlmr51SMUpO8dDZ6kMnqOTTRRwNDTQ2VDF18R2u9o+SN9YSqPPe7yJpG2XvHNsSC5QN
      3uFXfxyl7flXOdVW/cTt5GJLXHznPRaTMkZHA+feOEeLx/roEyuSIos3P+DKMpx5+UWaPaYv
      PcjVokF3jm0RwNaOKCqiKD7V7ieqqqIoCqqq3t2Y+au8m4qKqigoqnD3e/nyZyqKwvv9s1wd
      XXt25j0GiqogUFnPQlZkdOLT9xu1aNAKRIsGfTRaNKiGxjZQOZLWeIjB6Q1GFytjEKwoSsVt
      7lcul7fFI2kCqFDGF0P8ShsEP3P2hgBUhfTmAoOjM2Sx0NLdS7tfC0fT2CNjgHI6wu07k1j9
      LTT7bawsBx9xRpRbf+wj+hTXLMaWudg/qpVGrHD2hAeQy2WKZRmrq4bWWicdokohHiGGAZ/L
      yMbUJAVvF00eHaHFVayNHmraA9iA2OI0y4k4yUSB6sZmyqFlUjonXd1dGPNrzC2ESKSzOGrq
      0BcjbKZ0tO3votpoo7negiiU2FgLkglvsp7I4mw8QE+Th2JynZGRGTKKAV9TK/sC3r3xMCqM
      PeEBDA4P3a1+Ri78gp/+859YiOQQ8psMTK2j5qLMrM4yMrKOUtpgaGwTSDDWP0se2Bi9zmJO
      j9Na4MYHt8hKVgrJJRZXkiQ3JhlfSGE2S0wOXGUtI2HMR5ha2aSc3GBsbhVZLTA/PMh8pIzT
      DlMDU2TLEfo+6CNjcuJ2ZLnTt6RtnbpL7ImXjqAzUt9+jO+2HSG1Psr5ayP4v96F4/YQi5si
      1oZebCvTLEwa0bX3YhEy98+V9D4OnTpMgxIlHVuk5/BBoquQSJQQLVZae3o4ElCQdFDddhhH
      bJLB7CdmS5wBTvfux2YrkAuNIUfXyDYf541DdajqHIvjcTR2hz3hAQqZJAvzc+TKKiaTEbVc
      QhFstHli9K0ksZu8uH0Cw2Ml9tXsQEimyUx+ZZF4USafSJJ/9lfU+Bz2hAeQJJH02ijvn38X
      1ern7CsvY0LE0LMf64VVnEcdGKRa9O4U1SYjYMTrcyMBlqoqDICAHleVHREwmeyUywYMJhcO
      WQeiiM3uxKgDncmKSzAgGsHrKiMKEi6XHZ1OACScVU4kWyNHG5b517//O/RVZgzSYS0ZZpfQ
      QiF2g2KMW5cuM7meRJB07Dv6NU52uLXSiLvAnvAAFYfeSc+Zl2kvySBKWK2WT/VFq5wWOho8
      u2LeJ1FUdWsleLcNeQBFUbZl0z7NA1QgWjDco9GC4TQ0tgFNABp7msrxaRoPcf7WLB8OLe+2
      GcBWopKAUFEl0rdrDKAJoEIJx7NMajnBz5wdF0Bm4SbvTgm8/OJxXMZPvlJUFEW9H3uuqur9
      9MhPhqKrqgL30/RUFFlF0Imf+ZJSVZnY3CDvXuoniZNDZ1/mVEfNF1j5xe19GT62vbLi6DUe
      ZofHAAXmJjYx2ktEop9VIDDLrVvDJJNb5UPK+QhDNwdJlT99ZGjhJsNz90IWEgy91/+50Zul
      eJBbsxFe+v5/4y///SuY5EetvcYZeG+A2Je8q8+8ZmKVq0OTlJVHH6uxe+ysB8issSwFOOiU
      WU0laPXbySyMsiTZWevrR6rWcePqFLdv9xPoOc3zh/2YTDb0Opn5/ve4PLyCtW4/J1pNvPPu
      JeKlIcbrD/C17/eic9oxA0p+k/O/+SNreT1HX/sOh+otCDodai7OynoEb6uPQ90qmY0lVhUz
      HXU2pq5cJNP0IkcaJBYGx3EfakC6297qwBWGg+tsbmRpOXSU0sIwIZ2fF18+hyU9Rt/tRYKR
      GDX7ujFll5gN6znz6ou0GAXsNiuCkGd6fIbo4iwTG3H8h17ltSMB8puTvHP+KrGylY4jpzh5
      sEmri7UL7KAAFDbn1nE27aOuOsWtW2FKHQ0UYyv0reo4cfJl2mpAL/ppb+/E5bZSzm2wuRbC
      3+NjYS5J95lXqPNYcTs8vPlahqCyn959DiQi3FwM0XSinjsXrlD73Hc454GCsjWPLtmrOffi
      Wa5/eIH/eUWi97mXOF5dYno4RYs1T9hoJD0xS8GlZyxq4A1yrC+GaDndQSq4guvA65w7E+H3
      v5nk1Ne/SePmMMGVGH5dFNnRyTfO2Oi7chlb76t8vWmR8XCEpqo866ES3fvchJdWMTQe5/vP
      qVx5f5lMF1y+vMiRt39ArWGBd38fQT7YtHOPQuM+OycAOcfC/CzDm5MsWVRWF2H1hcM4geZD
      z9NVb0IggyTpMRgM6CUd94pOi6KNtu56JpYmCS4a6Dl+FrNeQlIMGAwP3EIpwapaz3canIjA
      vWUSQRAxuxp46dt/wenEAh9eXaDQ1ktN+hrTET02VzOO7BTT42acbYeRhNT9JnU6D/UBD2YF
      AvX11FTZiebtlBIqosFIjd+P06pQG2ik2uvBGgshZT9RrsPho7OxBqutgMuyhpKMo2vtodlt
      QVVN6FQtHG632DEBFDIpMuYa3vz6CVwmgdTsRUYnYpxCwmo13B1sChgyEcYXFmiq9+O4uxCq
      kqckOmlq8bK5sUg6VcRYLrO+NIXb2Ehtw92LGL10We9wZXiKepuA0RWg3mMin4oxNTmO0e1H
      l10nJZjQC2Y6m0r8enyTF44dw1C3yEfX87y6/9l3RARnFdy4wx1LHrO8SEbbLWDXePzSiE+I
      LJcxWqqpq6/GajZj83oRsgruKisGmxu7fita0m5VWZ5fICvYqfG6MBiMuNxO0uszzC6uY/S0
      0dnuw2o2kd6YZyOpw9dYg1E04KmporbeS2hyhOXNFA5/Ix6LhCgKFNNh5ueWiJZtHDvei8uk
      R++0o6RUGlrqsEo6VLOVRn81kiggiEY81U4kUcTsdmMCBEGPw21DJ4DRaMNqNWAwObCZdQii
      hNXmwCAJSCYLDosJndGCx2FFFCUcDhs6nYggStirvDjELDOziyRzCbJyLQe6au5X3NZKI+4c
      WizQblCMcfODC9yeDSFaqnjx7W/RUfNx6UQtGnTn0ARQgSiKwq2JFUYWKsMDKMrd0ojbsIvO
      drFddYE0AVQgWjToo9GiQTU0toHKkbTGQ2xVyq4M56yoKlSQPQCKsj32aAKoUP73hRFtELwD
      aF0gjT3Ns/UAhQX+9z9eouW5tzjR6f2U2uRClnRZwGExIwiQjm4gm6txmh9eSVVVlXQ8jsnt
      Rg/k4xtk9F6qrJ9tvlxIMz96g8v9M+QUHS2953jxbAdPP2T6Esh5omkFj9MCQCETJ13U43Zb
      tbdNBfJMn0lydh579yGU5BqFz9hMuxhZY2xpg3s9uXwmTrb46fBJVZaZHRy8v8F0KRsnlf+c
      MEtVJbI8xXTUxnd/+Nf8n3/9XzndVrVzuRyFEP2jHyeylApZ0uk8ldN71niQZ+cBlDRTaxKH
      jniZG18imy9htsb56MIiTt0Kt1Nu/Os3uR0XGLjZxEuvfQ3j+jRFcxfmxT5+924/adHKsVde
      RrhzhfODk1jGxzn82n+iPbFKrDFAYyHLrQ/e4fZ8DGfzSb771lFMKMTSKZo6jmIhR3A9iiLZ
      sZY3uXxphUMvHMWipBkbGqFmv48rP7tKTkxTlJz4a62sLKxT2/M8Lx+qZ/zGeWY3M8RiRdrP
      vcVrbWZuXHqfgZkwelczb3/zZRyJaf5w4TqRnEjXc29gX/wDVwcSTA/6OPjq67RawkQiHupq
      U4xee5+bE+tYAgd59WgtV/70PsGcSvupt3nx6N19jzV2lGcmgFI8TNRkocfuIaVMsp7KUWWV
      SW2uYj90jP/4QgNqsB5XQseprhZEASZms5RkyEY3EGu6eL67lYC/Fnvge0j2S3h6460AABB5
      SURBVDS9/DJuYPlyjqIsszk6RNx/kr96vQmlWNy6GRXkYgFVp6OYCTMzOsxqEF764ddp8gwx
      uZzmgHWOqFpPh6mI0dPJ1755hPWhP7KmP8oPz0D/xAq5gkJJsHLijbcJFKe5sFoAnROPt45A
      Xk9idYqRtVP0ZMPgbuLs6VYa6mrw7HubqDvL62c7AVibX6VQLBMLzrKhNPEX//0bSEqZcmiA
      lKGOE8c6aGnyou2Sujs8sy5QJLTE7PUL/OTH/y/v3rjKwGQYBTC6mzjYFcCk28rkkmUZ2Mqe
      uoe3/Qwn2z1Elwa4dnOrSK2iyKjKg8ep5HMCVV47OlFAbzBs3YwgYDFbiQeDGF0Bnnvjbbp9
      RkDA29hNfnmQiZE1ajrrkQCzqwqrXsTs9OB1OTHoJPQGPSBgdXrw2M0YDEYkSSK1ucFyqsz+
      Q4fpbfNQLAp4O45wsstHanGYd29MA6DIMor68D3JagmT1Y1JJ6LX6zHV9PDS8RbUxDyXPrxF
      /DOSfjSePc/MA8SiSc7++/+Lg012hGKQd38/QqR0AHR6pLuyk4w6YrNDvBeLcqCn9/65yc0l
      FteiyIoJq1mHIKgUs8tcfOcC3UfOsjW81FHX6Wfixg3OjxkxOQKcPtWJURCob2pm7vItzr83
      g15UyeUsBACTvQqHeIORbBs/cIrwGeOSL0InSSjZOLPTZZRIGqVWIR3ZZGE5SEnVYzFKIJmR
      ov2cfy9KS08P9zZ5dboCCKM3OP/eFCZ3Hb1+PdOLayCo2B0mBG2QsCs8s1CITDyMaK3CrBcA
      hVQkguRykk+WcLvv/izkItHQBpEs1Pj96AsxFEsNhlKUtY0IJfTU1AVwmETS0TWCkSxOfzN2
      JUnR5MJhFEiF1tiI5TDYvTT43Xe7EirFdJSVjShlVcThqaWmyoaSTzJyow+l8SBHW6pR1Rzx
      uIDbbaKQTVAWbVj1MqlcEZPRRCGfxWh1oJezxAoiLrNINLhONKfisBqQ7DU4xAwbGyFyskSV
      z0+VTSIT2WQtksfl9+GQyhRKeux2Pdl4iI1wCp3Vjc9tIrSxQa6k4vY1UuUwaqURd4E9FQs0
      e+23zAjtvHC8E4tUOYFdn0QTwM6xpwTwVUFRFBY3YgTjud02BdjaYUcQRERd5axkFItFDIan
      T17SBFCBaNGgj0aLBtXQ2AYqR9IaD7EZyxBLF3fbDGAr+UQQBXRi5axWFIoFjAbjU7ejCaBC
      udA/pw2Cd4CvhABUVSWXjBBP5REMFlxuJ3pkSmUVk9n4VOUL8+k0ert9274IpVggpwhYTVqZ
      q68CX4kxgJJb4/KFi/TdHqDv6k0mVsIkYqtMTa188VpWIcnyRojS5xykKgqTfX2kPvvjJyIf
      XGBocYNyOsTI9CLlCkoi0fg0XwkPoETniXsO8c3nmpHkIiVECsksAKoiky8UkQxG5EKaTL6M
      oDNgs1koR1cYn0kjihIuhw2zQSCbSlFUBMxWO0YdyOUCyXgMkLDYrBh0UMpnyeSKiAYTNosZ
      QSmRyWQoyaA3WbCZDZSLRRBUsrkSZpsFsVwgnc2TTWYoCyYEyYTHpUNEpZDPUy4WKZRl9GYb
      NrMBtZwnlcoiqyJGswWz2fDVeBv9mfGVEIBY3Yn3+oe8e36ahpb97G8P3P1EZnN2mNm4RG9X
      Kxsjl7mzlEIR7Rw4fRJh4gajk3k21zc4cPwsTeIq14ZnyBTA29jFsUNdpCMLzHyYQc7J+LtO
      cKLFzO1Ll1jLKCBa6Hn+RfbpY/Td6GMzI4O1hW++eZCF/n5C+RjhpI3Tz/ewPniR2XAZJZPF
      eugcpfgKw3MlvB49ty9dJJLIky0lyVsO8oNvdjF79RLD63GghGDu4VvfOrIz+QoaD/HVEIDB
      y/NvvcbGRpCFmTGGEGlzpBn84A/o2l/i7VcO4jLIhHUi2WSMWGwNwd/C90+9TqI6xZED3Vj0
      Ba7/7APuBCXsksJqokRLays27z5eefl1nKklPhqJsLkRRPYe5Xtvt1BYuMX5pRDtnUaQi8Qi
      EaLjKTZe74FCBn3NAd5+oRk5O8uc1Mm3v7cfZX2KwawEPDCDY/Rw7FwvtVVlrp2foJBYYUls
      5FvfewOTOM/v/yWxa9/tXucrIQA1EyGq2GjY14FNlBmNJpHdNg6/9A2U2BJzq1G6fSWWw2a+
      /cO/IjPRx2heBhUK+TyyoqCoKnpLgLf+81v0eozkczl0ko64qEMnCpTyOUqyiiCKKOUSiqpS
      LpcRBZmFxUUcrS/zP940ce1fLm6NO4we9rX4sehFUoqCsrVdAaViAVk2PXwDejN2iwFRp6LX
      CfcT3gVAzhfQAkF3j6+GAHJhPnr3d8RTeUyueo6dfR69EAfBROeJI9y8MsSqaT/63Bw//4cp
      3I5qrC0OMFkxRi7xT//fKIfOvUFLj58//etPuY6Et+0QL508RDw4ws0fz6I3ezh49iX8tbA2
      dZ6f/uQikr2Os6/2UpVJM/Dhb7kz7EYfk6n9hH1mcw369O/46U+uYTFa8Rw8/YX3IzgDBMrv
      8tMfX8ZcbUJP7xcer/Hs+EqEQqgPxdYLn9ot5oEj2TrswWO2/nZvl5b77dzb91ZV76crfryT
      y6fb+bzr39vJ5uNz+NwdYQSBrWPKSaYnFkiXFchvEBJ7ee1Uw/2kGC0Ybuf4SniAL7/N0GeJ
      49M/2E80/hnrCJ9u54uuv/XZFwnzocuBaMRsFAgnsgimRs4crNcywnaJr4QH2GsoikI2V0Cp
      kInRUqmEKIrodJUj03w+j8lkevSBj+Ar4QH2IkaDVEHRoELFRYPqRQWz+eljgSrjFaOhsUtU
      jqQ1HmJ0fpOp1fhumwGALMsIgrAtG1NvF6VSaVs8pCaACmV4NqjNAu0ATy6AYozB/lFi+RIG
      m5funv14jBCPbCA66nE8RvcsvrGMzhvAvm1yVCkk1hi6M0tW0VHXeoDWepc206LxKZ7cp+U3
      mI+I1NbWYC5vcv3qMKmyTHh1msijUlkTi9yeC9//7+bcBPHHyP0Ij3/E7eXsZ3+oquQji1z4
      sA/Z6qGmyk56bZ3MZx+9/RRC3H6gNGJ0ZZyB4SVttbdCeap3rq2mif3761HyAQZu95HKgVLK
      szk3SlguUNWwj3qnRDJbxFPlQSenWd7IUVruZ2DVQilWT1NbG3Ipx8rMCBvFEtWBVgJVJmKb
      KwTDSbKygbpaK5GNTcoWHwc7GzB722i06gGZyNI0cxspTJ4A3W0+JFTW1tbwd53hcEftx3Pz
      cobVjQK+eg+iXCYeDWNwWgnOrJLJp1FNLtxWCIVSuOpbaPRaiG2uEImnSOUE/K1tNNhF1pbm
      WA2nkey1dLcH0JeTzEzNkShATVMb+tAwAwMpSukwvtY2vK4aAiYjOlUmvrHI3EoEyeWjNeAh
      OD1JOKfgbeyk2WfXZiR2gW34zlUy8TVCSQNmA+STMVY3Yyj5CANjsxSzCUYmpkkXZLLrs0wG
      k4g6HaKoQ9LpEATIpSKsbyaQsxFGJ6bIZTOMDQ2wHM+TWZvi0o0R8qrMSv8wQUUhOjnAbLxA
      ITjJpaFFZAGK2dxWjI6qks+nMdrspIIT/Oof/paf/+o6cUFlbeQGKxkoFaNMji5RVILc/GiE
      tAyrY1fomwhSyseZnJ4mmc4wcusq85Ecpeg8A9MbUC6SyuZBFEktjDMbzxCcHGMxlkWkRC5f
      RhTFrXuTdIgCxEPzTM+FySTW6e+/Q1ZWKRUK5FaHubWYQRRV8tk8n1PqV+MZ81QeYPHar/m/
      P4qTc3bzX/7Dt3AZFMIeP8ean6PFvElxKITeUU27aYGZzQ2kYIHO5jYCFGgwOTl2sB6AuKeB
      44fOElA36ZsOIqvg8DXS1XEca3icoYKdE+0NLCQ+IA9s5VqVWR7fpOXUSQ5Wuz42SgCdZKBQ
      KGBv6eBb/6mN0fc/oCBa6TjYwJ3ROcyWeZSmszj0a1R3HOP08WZWnUUShkPsr87SP7WKrIh4
      6tsJ9J7EnZrkvRWJUjlPdGWWkYUwuUSQQN1pvua1Ex+9Q87jZ1+Nir+pjYZYlmPH7tYGTW6Z
      lYgto/cf57mjdVvWZwwYLr/PguKny92Iom7ZrrGzPJUHaDrzbf6P//HfeL23img0g8rWUr8g
      CAgIdx+oRF1nDSs3xonKKnbHVtR7Kp64H6UpcC/cgY9/BHfbEBDuh0I8/PvQ4fLo2FiNUVIU
      8tnc3beoiNdpZ2ZshGRRQRBK5Atbvy6rox4he4drUyKdDea7lxEe/scnbHggDCMdipKvaueH
      //2HvHWyHYNORbU38sbbb3Jin5GhO4sA5JIJirKKonz8XjcaHRQTG2RKMoV8HlW2cuab/44X
      jzWzPHSbaOlpnoTGk/LkAtCZcdmMmFx+Dh05AuFxlsI5TBYnJh0g6nHYLIgCiLYW2txhZEcr
      DoMIrjoCuVF+/A+/ZGwticnuwiBunWOzWNDpJKwWK5IORKMZ+938WqPTiQkwONzYDBJVB45R
      nxji7//ux/zm8tTWQFMAT1MPZ/bp+PVPf8zf/vhnRKuacQI6s50ag4Qh0IxHD4Jgwuncmq4y
      mOxYjCLoJGwWK3pJh9W6tSk2kgmX1YjD58W4OcFP/9dvWMhbcFkk5NQKF377S/7t4hz7OhrA
      7KXLHuLv/+4fuTEbQjJasduMuGr20WQL88//8yf86sMh4tk4V3/3c37x24+wdhzBUxmLvnuO
      Zx8LVEgxfPsqCwkrZ196Hu/Th288MYu33+XWqoGTL5wi4Krc/CstGnTnePYCUMqkkglkvR2n
      1bCr3dxcMkIeMw67Gd2Xii7dHRRF4d8uT3C+f2G3TQHuhoIL8Flxs7uFqioIwtPP4WjRoBWI
      Vhrx0WxXacTKuSONhyiXyw8NoncTRVHui7JSUFWVQqHw1O1oAqhQJKlywqErMR+gUChgNGrh
      0BoaT4UmAI09jdYFqkAEQaio7oZOp/uSOdk7x3YNyLVZII09jdYF0tjTaALQ2NNoY4AKRi6m
      Gb91lbko7D/5Aq015p1di1VlEsEFhhfidHX3UO18+mnHp7NHJRtdZnDgDqGCkfaDR+ls8GzF
      az0hmgeoWFTCk9eYL/vp7fQxefMywczOLozlg7Pcng0hC0XyFbBdk6oqzIwMY248wJGOasZH
      x8jlny7XTvMAFUuBlcUyh9/opUEqkUnFSUYz1FrtO+YFTL4OXvYVGRsbq4w3pSDS88LbiKJI
      KbNOVVD+UtX4voiKuC+Nz6JAUXRiN2xNixr0Boq5/G4btats5Wao5JMb3Lo2jr+tFZPh6aaL
      NQ9QsRjQK2kyJXDqVEqKjNG0y33w3UZVSQZnGJ5MceD5l/CYnv79rXmAisVIbXWB0dFVMokg
      y4tRTC7Ljg6CVUVBLssoiowsy8iywm4uGqmqwuLUAg09B3BICmVZ5mmXsbSFsAqmXEhw68If
      GA0JnP7at9nv29lZoPjCbf70UR+JPICIv/0sr75yAOsO2vAgipLmw5//I9N386yxNvPd771M
      jfnJd+TUBKCxp9G6QBp7Gk0AGnsaTQAaexpNABp7Gk0AGnsaTQAaexpNABp7Gk0AGnsaTQAa
      expNABp7Gk0AGnsaTQAaexpNABp7Gk0AGnsaTQAaexpNABp7Gk0AGnsaTQAaexpNABp7Gk0A
      Gnua/x/E5zaFLsgchAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bronze Heat Map I' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASGElEQVR4nO3dWZMb13nG8X93A419B2aA2TkkhxRJSaRW00lspeLkwlXxRb6UP4I/QS5y
      lUq5HCflSsWbyotsaqEocbgNOftgBvvaey5oKhoOKFk2MI1hv78bzYCQ9BCFB+ecbvRpxfM8
      DyECSvU7gBB+kgKIQAt9+Zff/ce/0tjd8ivLmVa5+AqebfsdY6qUVi5iDnp+x/hCNJk5kedY
      Aeq7mxw8Wj/VUC+LeDqDa1t+x5gqycIMw27b7xhfopzII1MgEWihUQ8WFs5hWwa2YQAQjkRJ
      FWao721iDYekijPYxpBMqUy3USNVmOFoawNVC5GfW6T6+D6qFkKPxWgd7hNLplEUlXPX3+X2
      z/+T1evf4smnfyQ7O4dr2/TbTUJ6BABV03AdG1CIxBPUdzdP7cUYh8NGk8fb+8wUcgwMg5Cm
      kc+kiUV0YtGI3/F88ende6RTKbq9HguVMp1eD8uy0DSNcDhMs9WiVChgWRblmdLE8zTbbT75
      7C7nlhZHF0ALhVAUCIV1XMdGC4XpNo4or15m0G0x7LTxPI+j7SfkyvO0jw6IpdKki7M09nco
      LV/AGg5QNQ2j1yWRK6IoCpt3PkSPxgjpOrOra9iGgaqFmFu7yrDbwXFsXNtC1UIY/S6lpfM0
      93dwXWfiL8o4JeNRsqkE6xubRPQwrutiWhbXLq76Hc0Xlm3T6/c5qjfwPA/TtHA9F8d1cR2X
      bCbN+x/colwqnkoBhobJ6vISzVZ7dAE6tSqqFmLY66AAqCqJbJ6DjXVc2yaaTNNv1ommMjT2
      tgnpOuawz7DXQVU1Dp88IByNEQrrT/8bqopj21jGEEWBe7/7JZF4HOdPi8ZOrYoei9Nr1lFU
      lUgsDorC4ebDM/fmzySTJGJRGq0O5xYqlPJZ+oMhoVDS72i+WV1eot5o8vb1VzEtCz2sU2s0
      iEWjhMMhwqEwhVyW/mBwKnlmiwXubzymkMuifPlE2E9/9ENZBP+FVq+/K4vg5yxcuTFVi+BE
      tnAiz8gRID+/jKqoaLrOoN2kfXRwKgFfBs12l/XHm2SSCYamxfXLF/yO5LvHW9tEIxEOa3V0
      XefS+XO+5jEMkzv37rO6tDj6KJA56KNqGrYxRFG10853pkUjYfKZNKqqkogFc9H7vNlSEcd1
      SaeSFPM5v+MQieikk0mymfToESCaSGIZQ/R4gkGnddr5zrR6q0N/OCSfSTM0TL/jTIXd/Sqt
      TgfLspkrqxRyWV/zDIZDdvcPUFV1dAGOtjZOO9NLY26myNxM0e8YU+X8ypLfEY6JRaN85+Y7
      gJwIEwEnBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEm
      BRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQ
      gSYFEIEmBRCBJgUQgSYFEIEmBRCBJgUQgSYFEIE28hZJ4pvTYwkSWf9vADdN1ND0v72mP+EZ
      YRlD2tU9v2NMlXh6+j8QZAokAk1GgDF7tLXLzkGVxcosejiM7ThkU0l2Dg4JaRqFXIZef0B/
      OERTNZbmZrn12T3wPFbmK+h6mGqtwdxMkVBI4+GTHXKZFJ1en3wmTW8wYKE8w271CICPPr/P
      W9cuU601UDWVQiaNHg7RGxhk00mqtQaXzi2hKIrPr8x0khFgAqIRnYebO2zu7tNsdbhz/xGK
      orC1d8DHdx+wtV/lwvIih/UGnV4f13VxXY+PPr/HxtYuAO/f+oSHmzsoqkKt+fRezVv7VWzb
      wXFcOr0+B7U6N69fY2AYXFxZRA+HGJoWR40WpmWxsbXLgydbNFodP1+OqSYjwJjNzRRZWajQ
      6fZotDuoqsrcbJGN7T3evX4V1/U4qNVRFYViLks6keDGlTUc26Hd6+O4LnvVI77z1nV2qodk
      UylsxyGTSgIeB0d1NE0llYizujBHOByilM/y4Mk2y3MVVFXBdVw0TcWyHVLJOKlk3JfXIppM
      E4pEffl/j6JH44T0CACqFsLzXBTP87xnT/jpj37IwaN13wKeZeff+DaqzDKOWXrtHSzT8DvG
      SLFUBtuyZAQYt06vz+7BIYqq0O0NeOPqJb8jia8ga4AxSyXi6HoYw7QYGNP56Xfa1u8/4NYn
      t/nSZAOATrfL3v6BT6mekhFgzJrtDvtHdUr5LKoceQGg1mhiGAa3Pr6Noih8vn6PK5cv0Wy1
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bronze Heat Map T' width='192'>
      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
      mUjwdyfVAQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gender Per Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZNcZ3rn9zv7lif3rTbUBoAgSLGbbDVbYynGMZJGYyvkiLHDd/4y/iJ2
      +N53vvCNRyNppO5mL2RzBYm19j339Zw8my8yAWItVFWeqswC8xcBRhCVePLNrPOc8/7fZxOi
      KIqYMeMnijjpBcyYMUlmDjDjJ83MAWb8pJk5wIyfNDMHmPGT5lo4QBRFxHVY9VOw9dRe3Lbi
      sDltn1GOYR2XThRFcFxBCGP4BYQhgigAwvgLIyIMQyRRisHU0AEEMZ57UhgG8azrOVsPnzzh
      9tra1K1rHF7rAL16AzmdxO32sBMJ+r0egiSha9qz17TbbQxV5NHmHgsLi1gJExHwXRdB03jd
      spq1EwLZxMSlHWkUUtYrrwn8AX4ooqkvLe2ffgN9Z5zPCsT7yBPgtZ/zorbicEkALwiodtqc
      tNvkbZu5VHose88+49EBPNiKx1YMxGHr9Q7QbKKnbGr7mzzu+5iZMoP6PpaV4PuH29y9u06z
      7XJntYwfhOw8fkiyXObB138ilylhFTM8/OZ7lpYXURNZyrbM9mGFft/h5u07nNTbBHRoHW3R
      6Q9IWCYP7j9h7fZNDEUhJCQQVJoHj0gv3mVlPhfDR/3pIIsi3+xuE4QhvYHLV9ubaIpCrdPB
      1DQkQcQNfATgVqnMe+X5SS95YrzWAex8kgf3viefSrFaNjmo+xQKBfqux9r6KkQRuq4jCBKy
      GJHIZAk9l1xpjrSVIgQWl1cp5JMc17uQTIEgMLe4TCZpUtnv4kYyc6USGcDtNllaWcVOpshZ
      Gke1OkEUYNg5ZIKr/UbeAQRBQJUVCnYSSRSo97possLHy6sAbFVPMFSV5Vye8CeeCCBch1SI
      MAzh3gNEf3xnCKMQQRAQYthwRAw1hRjDvj2KIiJAFOLZCIUxret5Ww+2t7h9Y3nq1jUO10IE
      A5DLQhiObycMIaZfAAwdIB57EUQRCPGsLb51PWer0+QkkWXoqhdj5gCvENJu97DtxOkv++fr
      I4L36jXCKEKVZSRBIG8nz2QrLhHMG9Y1tq2jAz7rPiKGw7ipYQocIKLVqPP73/6a5fVbOK6D
      gkcnkNGjgHRpkbnCeKcYV40fBjw8OmTg++QSNr/ffIKlqtS6XRYzWf714Q/8YnmNVr/H33/0
      MVKMT6QZ52PiDnC0v0soSBQKZdx+D0FWECUJW5PIpfOx3hWvivl0ls3KCYIgkLUS1HtdFjM5
      VvIFuq7LeqGEJIr87MZyrIGhGednqkSwNxggq+orF30YhvD9Q0TfH/s9wjAaiuAYPCuKhuJV
      FGMQ1DHaguHnjNvWg60thOTSmBpguj7jxJ8Az6Oo6pt/mE3HJIIjEITYNtyxic2IoRfEdHFE
      QQjS+OtquBGONxSbNaPO2sJ4MZmZCH4Doefy4NFjinOL1E8OSGRKeN0amp0nl07AP/926kXw
      Xr1GFEXIkoQkihTOIH6ftzWNIviHA4+j3vCOv1875Cj7JCbLk+HRwQb5ZBbXG1BKF6bHASJ/
      QNdxODncJ1depFvdRTDyFLLJ4RboGhCEIQ+ODnB9n3zC5g8bj7E0jVq3y0Imy789/IFPlldp
      9fv8/UcfI8/E75Vz3KzgDBwkUeLX3/9+irJBRZmF+Xmy+TyVg21EI43XqXBSa016ZWdmPp1B
      liQMRSFnJRBFkcVsjk+WV7B1nfVCCVmU+PjGynC7M+PKWcovIEkykiixkC1Plwh+Ez+K4Dgi
      wSMRHMO6htv2EDGG4FVENJIA0xUJ3uuGtN0AURTZ3NliZWkWCZ4MmbhEcDgSmjGJzdhEcARM
      XyR4ITfc2kmiCGKL26v5C9uquxGOF0yxA0QRDx98TyJTZq6YffGVUUi92SaTTuG26/haCksV
      adcr7B5XWVu/jSa/eFF5bhcfnaDXItQ0kqb5ws/3drYpzM2zv7WBkbBJ58qEgx66ab56ef7L
      9IvgsxCGIYfNBiedNkU7yVw688zWNIrgF2wdHcDDnQvb+XbPo+ZM14bjpSdARLfbJfB3+eIP
      n7F++w6e52MpIaGoITLgs1//mg8+/hRv/x5SoogZ9vA8h81H99ncr3BzKU8oKCTsBE67Sq0V
      YmsKai5J/XAPK1Oi1zii5wm0mzXSySR6uoAZtvn622/JZbNI3i4uKu3jTdKLd1lduPhdZ9oQ
      BIEnlWNO2m28IODr3W10ReWw2cBQVZK6wVGrScowmM9k+WjxxqSX/E7zkgMI3Fi9ia0JeIKK
      qUq0g5DBoI9mW+iyyOLyKrlsCldyOe70yWSSzBkm/W6PtZUbuP06RsKkXjlC1QwU2cOwrGGl
      0+hcWhREJEVhff0mpp1g78FDoqTN+soirbaDncljExC6BRRhuu4Y4yIIApIg8tHiDfreAEkU
      0RSZP18dVlrt1WsUkynWC8Uxwk0zzsqZRPBgMEA9LUh1wdeelTAM4YdH8UWCxRhFcEyRzSga
      CuH4RPDlRIJvL19cBO+0Q3reNRTB57mg4774n5FKQhSTCBbEuEqCh2IzhojrZUWCT/rR2Nmb
      YRAgShJVLcGRnrqwHVUHeWQrDsIYbF3tKVAUsbu9gagnmS+dc1//3z6buAjerdeGwnd01ymn
      0lNZEww/CtfPNwe4MRXV7dcOOc5uxGPsjFTbdQTguFnlzuLN2O1fqQNEfh9f1MDp8Zt//i8k
      SguokkbktnD9iHQmww/3H3Hr1iquF5BNJhAVg3z24nedOBGAe/u7DIKAnJXgj5tPsHWDWrfN
      QjrLrx894GdLy7ScPv/w0cfIMd3pfso4A4dWv8Ne9YAgDKh3GmiKxlymyGJ+/FrmK3UAQdYJ
      +m1QDfKleaxMmrSdxXWTEEK72WR+voieyJBRoHa4T3n1vatc4qnMpTM8ODpAliSKyRT1Xpel
      bJaVfIGB73OzWEKWRH6xvDoTsDGhqzo9t89q6QZ+4JOyksxlirHZn+pIcLPZJJVKPSeC3+VI
      8CgdOi4RPFrXRivEH1MEhKN1be5usbI4ZiQ41s84vq2pjgSnUs9tfVLJ+CLBgkAsBQHEHAmO
      otjreFczZ3t914toe693lDAIESURq1/HLo1XnffUVhzEYevKHWB3e5v5pRsvHHY4joOu68/+
      v16voWk65vOR4ykQwS8jAO7ApdXvU+m0yVoJ5tNnvOJeY2uSkeDDRsC31dOfsPu1Q06uWAS/
      jo2jbeazZbaOd7i9sD6WrSt1gNB3adYrBIKIpqrUjg6JNItus0oum0ZTFL69v8mt26uYmsv3
      X/2e9MJdVhenNxKsyQq/efwV+YRNs9fji60NFEmi67qkTJNqp0PGNGk7Dr9cXWcpO2vyNS6e
      7/Fg/zGuN+Afv/5Xsok0jufy0fJdLN18u4HnuFIHcPtdZDNJ4LkcVitksznaPZd8Nk0ilUXF
      Y36ugKobSEJIIlVAlaZWogDD7M2MYZHUDbKJBE2nT9ZK8P7cAhERAqArKu/PLcyK32Mik0hx
      3KxSTheQRBFVVrlRWLiQrakWwU8JwxDuP363G2MRjUTwZKKkDTek0n+DBhjZikUEz9KhL4id
      eMcbYzFqjBWPEjju+udLrVYg8YbWTE8vNLObIFE4e5nnabbi4No7wP7OJqiJs0WF//V3ExXB
      u7UqgiAgCgKCIFBOpae2OzTAV5sDnJjbqg5F8Ga8Rl9DtV2HKOK4WeX9pVuX+l4TdYBut0tC
      Uvjm3n0Et0UgmxB5GHoCQVE42XpIbvl9bi3PTXKZwDCL87v9XbxRs6s/bD4hqetUOx0WMll+
      /eg+P1tcpu30+YeffTKLAo+BO3Bp9tvs1Q4Io5Bap46u6JQzBZbyF9vrv4mJOkC+OE8maaAl
      MjSOtkGUSOcX6DVbOAHkS/Nk0/Ykl/iM+XSGh0eHqJJMKZWi0euylM2zmi8yCHxuleZQZJk/
      X12fRYHHRFc1eoNh9DcIAtJWirlM6VLe63qJ4CAGERxnYyymNx36ScMnjCnq8UwE72yysrQS
      i6041zUOP00RHFckOBqmQkxjJHjZCpDesg3rehGtwdvvf89EcDuBlRvvifyTcYB65YhKs8/a
      +sorQnEY+VV4+P0DrGyB+VKeXq+HKIrPIsK9Xu/FSPCERfDr2K1VqXbalFNp8gl7rH3/JCLB
      R82Abypnf6pelQh+no2jLeazc2web/PewjVKh271XDRCdrafEDouPzzZYWWpTLMfIYUOP//k
      53S7fUStybffnZC0LY4OD8llbHarfW4u59l4WCdVWmS+eLH0gsvmpN2i2e+x16iTtRI43oCu
      6+L6PnOpNP9y/x7//Xt3cTyPv37/g0kv91riBwH39x7hegP+69f/RtpK4noDPly+g228paX+
      Gbg0BzBkgUprQD5bxEqGuCioYkROV1AwAQFN15BlhfnFEoHbo5jPEkSQzyrIsszc0spUd4cu
      p9KYqspxu4Umy4RRyFphKNZ2a1Xuzi9STqWRY0r++imStlJ4gU/OznDSklFlheXiEkJMWun6
      iOAHT6YzEjytjbHOsK7mIKLSf7uuerrX3tjZYnXWGGtCWOa7HQkeHgOduya44Ub0/VfvYWe6
      OHQw9dNf8rwto2ViZsbbdswc4A20Wi1UVX0mguu1Gpnsc825/u33Vy6Cd+u14b8ZFdDMvZTq
      PA2R4CfHPjvtq2kevF87pJIdb05wvdPAC3wqrRp3l27HtLKLMzUO0O21efJgj2w+xw8bh9xe
      ncNx+kiKQT43mRFJkiDw9e42XhD8GP01jGH0N53hN48f8GcLN+i4Dv/TLPp7JvoDh1avzV71
      AEEQOG6cYOkmhWSO5eLSla9nahxA10yKpQKuFzFXyGFYCVqVY+ZW46v/PC/lVJoHR4foCsyl
      0jR7XZZzedYKRfwg4HZpDk1RuDu/MIv+nhFd1ekPHNZKy0REZO3MqMZ3MscdUy2C2+02tm0P
      RfDDmETwO9YY67j3+lLGy9hrzyLBV4xtPxd1NE0IYtjrRqNIcEwuMBTBcWx9LjYnuGjB656R
      QRhQcQSCGG5vYRggihJ6w8RIWbHYioPz2DLTFunXjHeamAM0q8dU2gPWVxZf+/NWs0ny+aL4
      CYjgl9muVThptSin0ixkslMhgt+EBHwZc0r0eUTw/b3HJHQLSzdIW5Pv67T08Rqf/K9/9crf
      T8wBWl2X9ZVFvvrDrxGMPJHfwU6mePB4nzs352n3fNzvviC9eJe1xcKklvkCh80mGyfHCILA
      N3s7GIrKXr2KpigU7RSPj4+YS2fIJxL8YmVt0sudKIf1I7J2hnqnwf/35b/wwY07hFHIhzfu
      THppLzAxBzB1icebu1jJLKKkkiusUavVWCgXQBQxTA1VLKHL0xMLFgWBv7x5m1qviyYrmJrK
      X6zfAgQOmw1u5PLcKpUnvcyp4EZhkSAM8Hyf5cIi+WQ2tiBfnEy1CH7KUARvxJQOHSIIYoxz
      gmOqCY5GkeDYOjqH7HQgiOHX+y5EghOFFMWbr7ZSnGoR/AKGHmM6dEzdoXl9JNjxo3NPQnmW
      ChHG5wBKQkSJyZYoimiWjm6fr+3Im2w9jyAKzN09/yAQ3/eR5fEu4Yk7QOgPePT4CeXFFZLW
      j3H5V9Khf/2HsUTwdrVCo98jn7DJmBZGDG3c3ySCm72QPxyMP8sgDnpun0qrhuu5LBcWUZWL
      f+792iHV7HaMqxsiKRL/8L//b7HbPQsTdwCiiDAM6NQOePSoR0KDw4bLzeUcTx40SJcWmS+N
      nw7d7PepdjpsVU4o2EnaroMfBPQGLuVUmn+89x1/e/dD2k6fv/vgo9iyDSeN53tU2zU6/S5+
      GLB1vEM5XcTSTW7N/7SFOkyBA0TCsN/+wHWJRAlFVShkdWRZZWF5Jbb3WUhnRr39BSxNxwsD
      lstzCAgcNOp8tHSDgp185zq3ybJM2kphGwmiCMrpIgu5ubi6r1x7pkYEh75HJCqvHbYShiE8
      2pjO7tCviQT3fDjsnVOvjESwEKMIjj0SvL3Jyo2V2NcligIrn56/Df47oQGeIspvkWu6DjGc
      AhHGN4YIXi+CTWDtlNLZ436E93LL8mh4EhSbA1xCF2bV0tESZ8ifHpEsprGLLyYyxnHRxsnY
      K9nb3qAfSNxcfVXFP+3vX63VMPQXuz1Hgcfm7iHFdBI39EnYGVT5lF/YmCL4KU/fYbta4bg9
      iuqmMxfa8180EvzdjnemYvRxebj/hKX8Atsnu2N3UYbzi+D3/uZn3PnryWTynpWxHaDX69Hz
      Rb747L+BWUCJuqiKRSaf5LDaRdg/wjY1+u0GGx2H9fVVHj96jCxE9ASdhOiz0/EoNOq0XJDD
      PoOBS90VMf0mqcW7rC/FHwk+ajXZrlUIo4h7+7tossxevY4iScylM9zb32U1XyRpGPxqLf5i
      7KtgMOqiHAH/7+f/hVK6wMDz+GT9I7QxToPeJcZ2gHxpnoHr0tUlNMPm6LBNJmtycHBCIpXD
      DwIs0yQKPBTHA0FEkSXsZIZyMonkuSwZHt1OF0URKWRzON0WSWTcto6hXI5a02SFT1dvUu10
      MBQVQ1X5d+vDNnxHrSZrhRLvlSffkW4cSuk8lVaNhJEgDAN0RWMlxnrad4FYRXAUhgRRFHth
      yFAEb8YXCRbFGEXw+cXmXidk8NJHmXR36LPY2tjZZPUc6dDpxRyZl2Y7xKkBpk4EC6J4eapa
      U6cwHfpFEewEEdWzRIB1eHkDMkyFiKYqV/5lW4qholraW19vF9MkxxyldFVMXI53Gyds7FdZ
      XVvH0l88Cep1GvQ9iUzKgt/88cIieLtaodHrkbfjiwLDqyK42Qv54wQiwAf1IwzVYLe6f6nZ
      lvu1Q2rZnbe+7r2//ohk6eeXto44mbgDDPo9XM9jf3sT1dC5/+23vPfhhzTbDnkbBkJ66ABj
      0HL6VLsdNqvDKHDH6eMF4bMo8H/9/lv+5v0PabsO/+kaRoH9IGC3uk+1Vefzx1/hegNEQWS5
      sMhc9nKayr4rTNwBFE1HU3oYiST5rEl7fhGn1yWRSKKqIYr89kfu23g6uE6RRGxdJwgD7uQK
      CMBBs8HPlpYpJVMsq9M7i+w0LM3A8RzWSjfoun0M1aCcno4aimlnaiLBpxGGITzeRPTH1wDx
      NsZ6Ubj2g4jD7sXXGI2i1HEwyZrg9MKr4vcp77QIvlQUFaSYIsGCEF/94XMi2ABWL5gtHEUQ
      hBGHb5jTdf5lxe8AsqaiGG/WT8limmR5Ovu4vomJOsDjB/dQEjluzJfot+tEWgpTff6XFtJs
      drFtC357cRH8PK+7JLaqFWrdDkU7Sd620d6WljEizjpeAQiCiM83vZgsDum5fU5aVdyBy0px
      aex06NNE8O3/8NHMAc5Dr9dDCUW+rR4iSxKq0eDhxh7rizlCJHx/gG7lhg5wiTR6XVr9Hju1
      KgXbftbhuT8YUEqm+Mfvv+XvPviIjuvwdx98dKlriRvP96i163ScLkEYsHm8QzkzTIe+PT9+
      esR1Z6IOsLS8TjJh8uDRI6yETYjAQqlAplBCijyOTyoYxtmTry7KQiaLKslIokRC04kieK88
      jyDAXr3OxzdWmEulUeTr1/lNkRUyiRRJ0yaKIuazZRZyZSbViGrauEYieCueSHDs6dBxzQke
      aoDdzvRqgI3tTVZPSYdOzWffKH6fMhPBF0WRY+rCHG8keJxu00e9EG90aBRFERERsja9kWBJ
      lZG1V/WRammvLTi/DkzEAQZOB9dXCJwmkmljm8aznzm9HqppvipWf/t57CJ4q3rCUavFXCrN
      YiZ77iPIcd3o3iWlRe/XDrE0k+3KHn+2/H6sduvZ3Vf+PrtcnDnAefA9B2cAbqvJ/tYexVwa
      SZL47tvvWLt5F1l0cX2o7W+SX/ng0uYEH7da7NQqANzb30WVFfYbtWFKdCrDvYM9VvMFUoZ5
      rVKigzBgp7JHvdPkDw+/xAs8BEFgpbA0iwy/xEQcQNNttrYfksmXmNd0BEknn1RpLC6hqgrJ
      VAqREIWA9CXOCdYUhV+t3aLWaWNqGqaqspp/D4g4arW4VSxxuzR/7fSipZm43oC1UoqO0yOK
      QkqZ4nX7GFfC9RHBT7YQY8gGHTbGEmKJuI4rgvc7IYOnpZGj7tDTHAl+kwjWEwbl98/W238m
      gi+KJMUz2zcU4muM9XSk0RkvtIYb0X5+zy9JPCudiCIiiG/4W4wO8NSWpMgs/+ImQowjpibN
      pTrA9sYT0pkkspXHVKDf7zMYDEilXuwWXKlWyedebEfytJ74GZ99EZsI3qqccNRqMpfOXEj8
      PuW8Ini34vO4Ge84o/7A4bB+jB/4LOXn0dXLi5vs1w75y//x3yPNHOBsiOLQCQbCPo1OD1sV
      SKZSbO0d4NT2UewyqiphmAoPvv6c5NwN3L5L2k5Qa/fQwy655fcpZ+PVAcft1rP5X0PxK7Pf
      GNYDl1Np7u3vsVYoktSNUfPb6cUPfGrtOq43wPM9nhxts5ifw1D1Sxks/a5xqQ6QSGWJggG+
      ZJHJ5hGDPloija5I1FUBzUxjp22cThOvvIBqmCzOz9Ou1bEsk7RuEQXxF5gYisqnazepdTpY
      WoChqqzmh2MmjltNbpfK3C5fj2M9RZLJJ7MEYUgYhSzm5ljMzc8aX52RaySCt6czEnyOOcG1
      lzXA87YuoTv0ZYjgf/+f/2YsuzMRfFHimrYehqPGWPG4wE4zPEcgWECUXv++Q2c6/4ywU97q
      jRdqIp8is3T24p+nF5qbjK9meVq4cgcYDLr4vkK/1yGXz779HzzlAiJ4s3JCs98jl7DJWham
      qo01IulloijiyyfxpS8PfI/tk10EQXjWwPYyWP3Ve+dygHeZK3cA3+vz4P5jIMQbuDTqVZwg
      JJlM0Go7iE4dX06hmzJJy0TREhQuOCe467rUu102n3aEdvoEYUh34FJKpvin77/jr9//kI7r
      8D98+LOJ1wIHYUC1XUMQRPoDh8cHG6yUbqBKCu9PwVDpd5ErdwBJNrh95z3ajQqVygmJVJb5
      TILDg306vT7z2TyIKsWFOfYeP2BpjByThcywOEOVZdKmSRRFLOfzCAgctZp8srzKXDqNMSVd
      0iRRopwpEYQBYRhyI7/IQnbWyfkymRoR7PQ6+EgknkuM6/d7GIY5FMEb2/FFgsW4aoJhs+nH
      sy8e9QWKK8h0mgi2CymyN85eNP9UAzx48IDbt8d7Es1E8BvQzcQrf2cYz+2BBSGeSLAonHsW
      72ksJyUEUWSnPaZzCkAUYyR4lO6x8GfLSMrU/Jqnjol9M77rsHtcQYlcUoUbJIxhnnngD/BD
      EU19aWm/+9OFIsGblRMavS75hE02YWPG1BQLfowEh1HEn8YUw/d2HjCfLdHstVkuvH528kUo
      3pybOcApTOybifyAZquBHDjU6l0Oq21urhTQFJNWr4umaXTbbZLZAotzr5uFfja6rkOj12Or
      WnkmhP1w2BSraKf4px++42+mQAh3nS5bJ7soosz//ev/h5tzq/hBwC9vXY8Oa9eViTmAIMvM
      ZZP0wyxSEGDYaayEShRE2AmLQRChqQqaNl5uy8Io10dTZFKGSUTE8qgp1lGryS+WV5lPZ9CV
      OOYpXpzlwiKtfgdFUlgrLZO2hnW8My6XqRHBpxGGIXR7sZzhByNxGFck+On0lP6YGRtxN8cN
      ggBJkjBS5tjCeiaCp4Hv7sNg/KCTGEVvFdOHvYj9ztlEbXzd3Ebp0BdwzeVf3iK3/OI2cdpG
      EU0rE/+G9rc36fkCSwtFBoMAwzQIfY9e38XtdbAyOUxNhY2dU0XwN7vbbFZOWCuWmEulUSWZ
      ltNHFAQSmo7jeUiiiCgIpMzTI6zNesBOLYYudMDXm/dYyi/w3fYPfLh8B0PV6To90lYqtrt9
      fq30igPMOBsTd4AgCACZ3d09BgMPRRzqg4ET4ngu65mzjS3tui6aonDSarFfr+GHIUEYIggg
      izKPT474YH4BXVGvtL43aSa4v/eQpGnz9eb3CIA9OvLN2teri9q7yMQdIJVOcVzv4vWbNAcq
      aV1mrphk96jLzcUirjMYDsd4Cyv5Aoaq0ur36bgOuqKSMoZBtUavS8G2Wc0XrzyqWkjmsTQL
      TVGptKqYmknStN+popLrzPURwb1+PCI4CBHF02uCvZBXx5i+jmgoqqUYMlXHEcGqqSGrL55i
      XYbYnIngSfLND+DFJIIZdofuehH3x9zrhzGlMEej/15YBK/M2p1chEt3gOPjI1zHJZNNI0oq
      /V4HXdeJkOh1mmiqQMdVKGRM+u6ARq1OPp9FkBUC10E1EyiSCJuviuBv93aodNrkrAQFO4ks
      SURRhBcE2LpBs98jY1p0nD7FZOqVQpiBE7KzF3/F2X7tENcbsHm8w6e3PiYiwg98DNW4lPGk
      +fXyzAEuyKU7QK/TwAk1upuPaXsSKUNBEOCw1sWgR/nGMq1Oi07tBBdQxYjdrSc0HJ+0aWPa
      Lgvzr0/cMhR1NOd3j3Kqy8D3kSURLwiIoohvdnf4+Y1lFEmmkExdaV+crtNFFAQ2jrY5bp6Q
      T+awjQSrpVcHis+YHJfuAKW5G0SBT7MlkxIlWo0WyaSNkcyRTRq4A49szsTttOkHAvh9BMEm
      Jauk7NMjoYuZLLqisJovYCgqJ+02S9lhkU1vMCCh69wqllFl5Uov/rSVQlNUFnLzuJ5LyrRn
      Jz5TyjUSwU5MkeBgFAkWCIlwx9gBRUAYBkji+G3TxxHBiqkhv5Q8OBPBZ+MaieB7sUeCRYZj
      jV7moBuxf6ZZX6Mc/jjSqy/YGGvll7fIpS93gMi7zOSyQUOfL3//B7IrN1nIZQijELfbwkEh
      ZWo4Ax/DMBAY3RU3d98aCd6oHLNeKFFKpdFkmUavhygIJA2D/mCAJEqIokDGPP2CadUDdmOI
      BPuBz+ePv8JQDQrJHJqioSoKURRhG6/WP1yEwkwAj8XkskFFmbnyPKoJe9t7tDstsqU8jzce
      k0uotFyBYkrHTJco5lJvtdd1XfSRDthvNvBHQlgQBCRBHEWCF9FVhU9XryYSHLqKRHQAABlv
      SURBVDE8JvUDn8P6MTvVPdbLq8iSNGtaNSVMdAuUyueRdYVG1GJxeZlEwsC2LAaui9n38HpN
      stk0T0/JT2O1UMRQFFpOn47joisKyVEkuNnrUUgmWc0XuMpWz5Ig8v7irVGNb4Slm8znyrGU
      Y86Ih+sjgvtxieBhI6vTttpeCP5ZIsEje3GkNUTRqMnWOW0pxqsCGGYi+KxcHxH8Vfwi+E0o
      oz9PedAITu3oFkur9Qh4S3v07HKR1V+9N/Z7zfiRS3UAt1vj2wd73Lx9E10SEGWZbqtKrTkg
      mzaRNRPPdUlYBvWTQ8REHpkQTQYfGfwerW7IXDkHW6eL4Kd8vbvNxskx68USpWQKXVGod7uI
      okhSN+h7AyRRRBJEMtbZTk9O9jwqzvkflF9tfsdSfoFvt37gwxvvYWgGnX6XnJ25cCr0zAHi
      5VIdQNESpAyZo70d+v1RY1yhj+dpdDst+kcHbJ+0KGYz5FI69eNDdvcOWVkqIUY+A2QM7Xyn
      JT3XxVBVKp02h80G3nP9RCVR5MnJMXdHadGfrl7unNyUmeT+3iMyVpJ7Ow+Iooi0lUQURXKz
      wNhUcKkOEEUhgqKxtDCH03dBFFHlHI16nYHrksqVWVYtisUSmgx630FTdYrFLAIR1ZMjEunk
      ud5zKIZV2k6ftuNgqCpJfVhX3Oj3KNpJVvKFKxGihWSOhG6hyiqVdhVLM7GNxCwVeoq4PiLY
      cWNKhx5Fgs+xbx8EEa/TxMOa4GHt7bicJRIsKhKqoZ3J3kwEn43rI4K//DZWEdz1Ir6PIdgV
      X03wUAi/yVR2ucjaX9yJ5X1m/EisDhD6A3744QGF8hwRAqYqoegmvU6bTqdNOldEcut8v13n
      xvIisiCgKwJ+JKFrCk63Rb3tYqkBvpQiaUn4oYhlaLC194IIHvg+3x/ssVuvsZIrkDJNMqZJ
      pdNBFkVUWX5WF5xP2BijhlhPr6+BE7IXUyr0fu2Q/sBh63iXT29/TBiG+IGPqRmxjSwSBAFm
      DhA7sTpAEAxIZkrYuszOcZVHu9vYSZtE/gaB51GpnFC0BDq9Hse7WzS7A4rFHIHfQ1Nseu0G
      mqZy0PKQlZBmw2Vh/vXpw6os8+TkmIxlUe91OW43OWw2yCVsNFmm67p0XIeinaLe7fLR0uWl
      IQsI9AcOoiiwfbLLYf2EYiqPpZuz9OcpJ1YHUFQLmRq15gAEmbX1NRQzSafZpDi3gCiAIsGv
      flGk3+1gtLrg9bGz8/i9JsX5BVrNJqsLCwSRSOT16Dkuhv76IpJfLK9iaRqyJPHg8ID/cOeD
      Zw2uDhoNVFmmYCdHDUcuj3RimP68mJvD9QbYhk3OvlhL9xlXy09PBI8aY0XAYGwJEBEE4ZWI
      YEmWUIyzV5PNRPDZuD4i+E9ximAQEXjb7ny/G761QVZskeDhpOxntmRd4ef/+d+NbXfG6UzI
      ATy+/uI79HSGYsYm8vv4chJZBFMVGYQiuirj9LvImoWmSLC999ZI8Nc7WzypHHOzWKZoJ9EU
      hVq3gySIpEyTnusiSxKiIJJLvD3A1q4F7NXP95j4t3u/49b8GkeNoQ5IWUk6TpdC8mz9jZ6i
      JXSYOcClM7EnQBhF4PX58qvHlIolIqnH4XGFpWIGZA2FiL7bJpFZYKF0tllivcEAS9WotNsc
      NZsMAv9ZxwZBENg4Oebu/CK6opzJAS5CNpFm83iHhG7ypyffYJsJMlbq3A4w42qYkANIpNM2
      iWwBQ1NJpLNEYYBpJSjl0oSew3G9R9ZU0e2zVzutFYovNMcyFBXbMCCCZr9HKZliJVe41Izo
      5eISjuciixKKpJC1M5hjdriecXlcHxHsDq48EuyHEJzy9VxqJFgQ0KyLO85MBJ+N6yOCP/86
      HhE86sH8PJ0xosLxRoJ/tKXoKj//n2ca4LK5NAeo721Ri2RUQcLUFexkktAPkGQJr9/hm3sP
      uPvhBwiChNvvIIQDQjWFEAUYioAXSeD3aPci5ufysLP/WhH8ze42J+02ucSwOZYoCIRRxMD3
      yZgW1W6bgp2k0euxOBqW8TIDJ2R/jKjw15v3WMzN8fXmPT5cfh9TM2j12hRS+QsnvmkJHZg5
      wGVzaQ4giCqR06ZSb1Bv+8yXC7hOl2S2SDltsnb7fR59/w2ykcJpnSCaKRKWy97+IctLJaTI
      Z4CCrp7eytxUNQShzQ8H+zR6PfwwQJVkvDDA832+39/jw8UbmKo6nBZzCZ81ZQ3TnnN2lof7
      T/ADn6ydRhIlCqmZ+J1mLs0BzHSaG3KGdrJAqlmnXCwwCENEUcPpN6g3uyytrOGFIr5tYCXT
      iALomk6hMEyHrp0hHXopm8PSNNYLJXRFodJps5AZnhr1BwOShjlqjiVdmvb9Me1ZodqqYerD
      tOc4eobOuFyulwiO4Xoadod+sSY4jIZ1wOcmGjbaugwRLAgCqnm21OfXMRPBZ+OnJ4JHkeDn
      hbAIPH+p7XdD9s4w9/fl6O04PM1XEhCQdYWP/5f/bmybM97ORBzg4Q/36Hpwc3keopCmG6EQ
      oKsqimEiCdDvtvGCCCuZRpPFN4rgp3y1s8WTk2NuFksU7CS6olDtdJ41wuqOosCSIJC3T99W
      tesB++c8FdqvHdJzHTaPt/n01idEUcjA90gYFsY5U6LHOf6ccT4m4gBRGCJJMt998xWpbJ4w
      jBAUBVwB2VYRwwCRCN/3cNxweAr0FvqjZriVTpvjdmvYKVqUeHpv3ayc8MH8IpqivNUBLoKA
      gDPoo0gye9V9DhvHlFIFOk53lhI9xUzEAdKZNG6kUM7aoBgoePz2j1/x6S//AhGXrhuRz9ij
      XiFn21+vF4ciuO04P0aBR7XAzX5/GAXOFy5NCKcTKXRVYym/gOO5JE2bTGKWEj3tXB8RPPBi
      7w79xtdEp0eAnxJFw7XFNiIpjBAlERhPAMNMBJ+V6yOC//DllTXGOuqG7J5lTnA03GDFEgl+
      zpaiqzMRfEVMxAHqhztsVXvcXl9FiAJkWaLdbJFI2mw92qC0sgChiO/0MOz0MB169+CtIvjx
      yRG3imXydhJDUai024iiOBLBzlAEiyKFM4jgg3OK4L3qIf1B/9lYpDAK8XyPhG5haK9rwv5m
      ZiL46piIA1jpHFq1zs72Nk6/g2Ua7O0fYKfyZCyD+/fuYVgJDNmg50ZnFsFJ3aDSaXPSbuH6
      PsrofD6MomciWFeUtzrARRAFAWfgjETwwVAEp4t0nR4rMxE8tUxmCxSFaFaauUIGLyggysO+
      +XYqTaPZ5ebaGo4PmeTZL9T1YulZQ6ynIjgxEsGtfp9yMs1yPn9pDbEyiRS6qrNUWMQdzETw
      deF6ieBLigS/8poIgjNGhoNLGJEkCMK56n9fx0wEn41rJoIHY5sRn7r7yAE6A7hXu1gm6LCh
      88VE8Ad//0uszI9VaWEYEkVRLGkVM87OxByg16qwcdjm1soCAJ1WA9fpEmlpLFUkCCHyHaxU
      DlUWXyuCB77Pt3s77NVrrOSLWJpGPmFz1GqiSBKqLKPLCvVel3IqjaVpr2yABk7IwTlSoQ9q
      R7SdLlvHO/zq9icEYYAX+CR0C/McYve9v/7ZmV874/KYmAPs7R7QaDnsKiJRMKDfbqJZFhkj
      5KDaQRd9WtVjpITD+7eWXmtDlWU2qyfkLJtmv0ej1+Wzxw+ZS6dRJZm249B2+sylM3QHLh8t
      xiNGPX+ALMns1w45qB9RHondWcT3+jExB1hYWWdZhEazRSBY6JpKMpOl2+mxsjhH6A9QZQnr
      Lfn0v1q9iaGqKJLMw6MD/uMHf4Y62hceNBrPCuDjUjqZRApD01nMLzDwBthGgkwiPRt6dE25
      PiLY82NsjCU8Ow0KObvgfZmIiPCCjbFkTUZ4rlosbg0wE8Fn4/qI4N99ceFI8B+PfIKRm8dZ
      w3tRex/+/Z+PfcozIx6u1AGcTo1HW8csLc3jB9DtNEmaOpqVpNWoI0gyrtPBTGSQBAgGfax0
      fiiC9w4ZtDt8u7fDbr3Gar4wEr1JDpsNFElCUxTU0XzgcipFYtSO5GhjgH/Bu/y/3vuMOwu3
      2K7sUUzlyNtZ6t0W89mLz+a9MxPAU8OVOsCg36e8tMzx0Q5hCKoCR1UXb28f1dARI5EBMv3+
      MYoq066eINXdZyJYlWW2axXSpkWz36fR6/G7J48pp1KoskzHcWj2eyxksvRiEr3FVJ5Hhxuk
      zCQ/7D5CkRVK6cJYDjBjerhSB7Dzc+xub1PI5+m6AZmkRatexZibQ1VEhAh63Q5uKJJKGGiy
      hJV6MQ3ilyvrmJqGLIo8Oj7ib+9+iPZU9DabaLIca9e3G/kFiqk8siSjygoZK3Wu484Z0831
      EcG+j3jBsxbvuflGYXj+WbynEVygMZasKggvhbVnIngytq6PCP7sC3AvFgl+fuZvNGqM9bIr
      7XdDds5QB/w854kE3/jFTebuzuIE08aVO8Du1gb1ZpPy4gqKoiCFHvuHBxRLC1imTuB7NLsO
      uhgiqwq1ls/iXBb2Dl+bDr1ZOaHa7eB6HinDRJUlMlaCWqdDQtdp9fvMpzPsN2rcKs29sVFV
      px5w+JYU6K8377GQK/OnJ9/yZ8vvY+km9U6T+WzprflAudWZZphGrtwBoihE1S2qlWNEIYJQ
      RNV0vG6FvYZAs+ejKyAMenQ9n2z+9LtmOZXmd08eYagqfhCAAI9PjrFUjWa/x8PjQ77Y2mAl
      X6DjOKTM0xttnUbaSnJ/9zGldIHtk12cgUsxnafSqlFKFy5sd8bkuHIHKJQX0HWdVr2CE8ok
      LQPf7eL4EXgdMlrA1kmfO8tFCoaF/hbBqSsKf3XrPURBIG1a3Nvf5WdLy4iCQBSBLEkU7CRp
      w0RTlFNtvXXtyRy2YaPIMtV2HUszSejW2wrMZkwx10gEB5eaDh1GvHYW8Gmcpzu0KIuIp7xu
      JoInY+v6iODf/vFSa4LF0Z+9TshO++zlkGcoMQZg+c9vzUTwFBK7A1SP9qi0HFRZIJnOIREy
      cB3sTJZWo4VlyASCitvrkCvk+eFPv0PJr2ErIXbCJEBk4AUYCkSiTBCIJG0D9o/eWBO8WTmh
      2mnj+j4pw0SWJLKWRbXTIWkYw+BYOstuvcad8typx6DdesDRKWL4683vmM/O8eXGt3x44w4J
      w6LWbrCQK58qhPNr5bN/iTOujNgdoO96LC/f4GBvj267SeA4CIrEwd4ObV8gn04S+A7VSocP
      DJv5hXkiw+bhN59jpFIoZhY1cHhSPyadyaKZ+aEDnMLLQlgQBDYrx1iaRsd1eHh0wBdbG6wV
      irRdh5QxjhBOcX/vEeV0gZ3KPs7AoZguzITwNSV2B5ifn2d774DSXBkRhjMBFIliqczR0QnJ
      hAGyTsKqYRkaklYESWVuaZl0Jk2jXkdOZLidtfEElYT59hFJz4SwKJI2Te7t7/GzpRs/Tlwc
      dYJIxSGEU3mSpo0iKVTbNSzNxNKtWBPsZlwd10cEB8GFI8HP87bGWCGjAX5ntRecrTGWKEmj
      plevZyaCJ2Pr+ojg3/zxQpHgPxz5L+T7RyPVGsf9+m2R4PRijjt/8/MY3mnGZTExB/B6PRpu
      H1mQCT2HKBgQqEkIAkwVvEgh8tp0HImlhQLsH/HVg/tUOm3SpkUhYRMREUXQ9wYU7GFa9EIm
      S6Xd5maxhCAInGwMztX7/6hxQq1dZ7d6wC9v/Rw/CPADH2s09GLGu8XkngBRRK9dQRSTbG48
      IptJIes+hweH3FiaQ44GuGjDrnAjUoZJpd3m4eEB3bRDSIQmK4RRyG6txsPjQ24Vy6RNc6zC
      lyAMUCSZo8YJ+7VD5rNl+gNn5gDvIBNzAEnXKRYWkRUDKRpg2GkkIcI0DAq5DAIR1coxicyP
      zbEWMllMVcMPA3RF4bjVYiGTAYYdItKmyXqhhCrLF77409awy/ONwhIDf0BCT5C1Zw2u3lWu
      kQgOLxQJDl76dMNIsBDPVJcIwtNGJAkCknw2UTsTwZOxdX1E8K9/D+75I8EvX04iEV0Pvqlc
      fCzq80REbzxRyizmufO3MxE8zVyqA9y/9zWqnSdtysh6AlWWqR9t048MXLfL6uo6g/YJuzUX
      r7GHXV4nqQkoukm320PCw86WhiOSDo5fiAR/ub3FSadF1rQo2EnCKCKMIhxvQNFOcdCss5jJ
      cdJucatUfnbHFwDPCTk+QzOsw/oxjW6TrZM9fnX7Y/zAf9YE6yx6YBYbmH4u1QHm5xfY2D3A
      d3Sc/ha2WWDgO6QKBURcqo02raMjGj2fxfklgkEHQU2wubHBjfU1dh98z0nT4/1br+bQpEyD
      WrfNg6NDuq5L9EwQR+zWazw+PuJWaW4oiE+5S78NPwxQZYXjRoW9kSB2Bu5MEL8jXKoDBEFA
      qbyAFPRRynM0qicszK/QanUpl+dBkMgkbrMmgBcJyOLwj2EnqFRb5IolEm9ojLWYyZHQdN4P
      AjRF4aTdYj49HITt+h4Z02K9WEKV5Atf/MMmWAbLhUVcb0DCsGYdn98xro8IDsNYBk8HQYAg
      ikRRPKGwIAzfmAQniJyaAv08MxE8GVvXRwT/6+8v1B3694f+CydBQ38XYiliGd46Xo03pBdy
      vP8fPx7/DWZcOlfmAFHo8/nnX/Ozn39Ip9vHczqYySztZhM7odPt+1SOD8iX5jFVASeQiNzO
      UAQrIhwe8+X9+1Q6LTKmRd5ODu+aRPQHA4rJFAeNBovZLCftFrdLcwiCQOWckeB//ubXFFJ5
      dFVDkWSSpo3rDWaZnu8oV+YAndox/X6HJ4+ekMjm8fo9trd3cCKFfCaNZajYydSwL1BvuH1o
      Vk84af0ogjOWSaXzvPAdZoKGUch+o8HjkyPWWyWylnXhSLCmaniBR7/jcNQ4Yb28giqPl0E6
      Y3q5MgdQrAx/+Vd/SbfTxTBNPrv3J1Y++AV+r0WxVEYSBTrNBqJuYWoKECGLIonnGmPNp59G
      gkN0WeG43WQhnQWGkeCMZbFWKI4VCf5o+S5+4BMxLIKfz5Znx5nvMNdIBEcXigS/XOcbjBpj
      xZUN+tqaYEE4NfX5dcxE8GRsXSMR/NmF0qFfvgyFCLp+xNeV841BfROv22qlF/Lc/buZCL4O
      XLEDBHzzp69Q7QyFlIlq2TSrtWElWLOJrGhIkYdmpfAGDn3XIZfJoaoKHJ68FAne5LjdImsl
      KNhJgjAkjEL6A49yKsV+o85SNsdxq8V75blXIsEnb4kEH9aPqXcabJ/s8elzUWBbT2CbpwfB
      Zlum68OVPwHypQV6vTr37++RymewtCQ72/vIhooaRfSbVbrbu6TmFmnub6BZabLqqyI0ZVrU
      uh0eHh3Sc10QQB9Fgv+0XefJyTGVdpvMGII4CEM0ReWkWR2mRefKw6kwb3GAGdeHK3YAkcDr
      UZxfJZmwEXUb29DxfR9RlhCApixSWrAwLYvFQobgDeNbFjNZbE3HDwM0Weak02Y+lQFhKIiz
      VoL1QglFli508WcSaUzNYKW4hOs/HYWUGvPzz5g2ro8IjqLYIsGiKBLFNNXrdd2hBYEXxh+d
      hesigtPpNL7vMz8/PzXrGoeJi+AoDPDC6Nlguxd/GOAMQlRFgn/5LJY5wX/Y94hH/o4YBpZJ
      L+T44D/9Ik7LU8n29jZhGNLv96nX62xsbPDee++haRqff/45n3zyCfV6nVarxcLCAh9++OGk
      l3wqE3eAcOBwXKvjepBQIiJRoev6JDWBUIC+p3JjPgdHP4rgFwRwwsYPQ8Ioou8NKCdT7DXq
      3MjmOW41uTM3/8IWqPJk8EqRzPN8s3mPUqbIn558w4c37mAbCSqtKjcKi8jSm7+un4rwXVlZ
      AcDzPPL5PJqmMT8/j6Io3L17F8dxaLVarK+vY9v2ZBd7Bia+BQrcPtVWi2qlRSaXQgo9NneP
      UeWQTC6PqqdI2zoHv/kCabTUaqdDy+nTc13M0fBrQRAIwhBZlPj+YI/VQhFDUVnMZF/I+/nu
      sIcgq68MqHhKs9em0++O7AV4vkfCsDBU/dUU6Ag810HRdaxckhsfr1/8ewh8Qt9HGc01Gxe3
      10GLSaw/tVWtVsjl8qe+NooiIiJE4fVbwMtY1zhM3AHOws7ODv/X1xuYo6jvOFS3N0iW5mK5
      0MIgoLr1mMLaeMEhAKfTxmk3Sc8tjm0L4OjhD5Ru3ZnZegvXwgHqfZf/4/MHMdXxDj/uu2zr
      qb2ZrbczcQ1wVvq1Ixw3Ijs/d2Ebzf1NIskk6FYwS2sY1sWfAlEUUN/dQxIDRCONnc1c2Fav
      esjAF2HQQraLJNLJt/+jN+A0TmjVOxiWQhCppEvFC9kZdBo4boAYOniBjOC1L7y2cNCjWWth
      6DLNWgsroeJfcG2+06HT6pHK56jv7yFLEZGSIJV/feHUaUS+F8vw9SvBdTyEaJikdlGMVAYh
      bCMmFnEax2Otp324hx94hIKK32+PZat5uI/vdohkG6/bGMuW02kz6LYZeBGR//pu2mdBsVJE
      /gBvEELgEkkaXqd5IVuCYiAKIZqdRJJlfD8i8twL2ZI0CyEK6FYOGDgeYSQSOr0L2UKSr48D
      iPgMBuN1cqhtPSESDNzKBpJx8bssRERRSL/ZJHBaRMJ46dJWNofvBfidCsjjaRNRkpBkichz
      8cc473VbVZqHh0S+i+dH+N0GKNqFbIVuh+bBHsdPHhN4PqHv4J93GskIv9eiebDPwPVw2w18
      t0d4wcs48t3rowH+zy8eTnoZM95Brs0TYMaMy+D/BzBDQZBMfXcKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender Per Sport' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geo Map Medals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gold Heat Map I' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gold Heat Map T' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Medals Per Country' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Silver Hear Map I' width='192'>
      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
      NQmAcLX/BzsNakVGhvWiAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
